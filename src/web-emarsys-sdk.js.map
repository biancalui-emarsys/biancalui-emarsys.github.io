{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/logging.ts","webpack:///./src/lib/constants.ts","webpack:///./src/lib/utils.ts","webpack:///./src/lib/storage-with-log.ts","webpack:///./src/lib/jwt.ts","webpack:///./src/lib/me-device-event-service.ts","webpack:///./src/lib/me-client-service.ts","webpack:///./src/lib/me-v3-api-request.ts","webpack:///./src/lib/me-web-push-db.ts","webpack:///./src/lib/index-db.ts","webpack:///./src/lib/local-storage.ts","webpack:///./node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/uuid/dist/esm-browser/regex.js","webpack:///./node_modules/uuid/dist/esm-browser/validate.js","webpack:///./node_modules/uuid/dist/esm-browser/stringify.js","webpack:///./node_modules/uuid/dist/esm-browser/v1.js","webpack:///./node_modules/uuid/dist/esm-browser/parse.js","webpack:///./node_modules/uuid/dist/esm-browser/v35.js","webpack:///./node_modules/uuid/dist/esm-browser/md5.js","webpack:///./node_modules/uuid/dist/esm-browser/v3.js","webpack:///./node_modules/uuid/dist/esm-browser/native.js","webpack:///./node_modules/uuid/dist/esm-browser/v4.js","webpack:///./node_modules/uuid/dist/esm-browser/sha1.js","webpack:///./node_modules/uuid/dist/esm-browser/v5.js","webpack:///./node_modules/uuid/dist/esm-browser/nil.js","webpack:///./node_modules/uuid/dist/esm-browser/version.js","webpack:///./src/web-emarsys-sdk.ts","webpack:///./src/lib/me-web-push.ts","webpack:///./src/lib/push-notification-support-info.ts","webpack:///./src/lib/navigator-info.ts","webpack:///./src/lib/browser-version-parser.ts","webpack:///./src/lib/push-service/index.ts","webpack:///./src/lib/push-service/vapid-push-service.ts","webpack:///./src/lib/push-service/safari-push-service.ts","webpack:///./src/lib/event-emitter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SdkContext","NoopLogFn","loggingFunction","context","level","data","console","Logger","trace","debug","info","warn","error","log","exportedParts","enableLogger","enabled","methods","method","SwContext","defaultClientServiceApiBaseUrl","defaultDeviceEventServiceApiBaseUrl","defaultSafariPushPackageServiceUrl","defaultApplicationVersion","loginOverloadProtectionTime","pushTitleProperty","pushLinkProperty","pushIconProperty","pushImageProperty","pushActionsProperty","applicationPassword","dbKeyDefaultNotificationTitle","dbKeyDefaultNotificationIcon","dbKeyApplicationCode","dbKeyMeClientServiceApiBaseUrl","dbKeyMeDeviceEventServiceApiBaseUrl","dbKeyServiceWorkerUrl","dbKeyServiceWorkerScope","dbKeyApplicationServerPublicKey","dbKeyWebsitePushId","dbKeyPushPackageServiceUrl","dbKeyLastPermissionStatus","dbKeyInitParams","dbKeyBrowserId","dbKeyBrowserIds","dbKeyXClientState","dbKeyContactToken","dbKeyRefreshToken","dbKeySdkVersion","dbKeyServiceWorkerVersion","dbKeyPushToken","dbKeyContactFieldId","dbKeyContactFieldValue","dbKeyPlatform","dbKeyApplicationVersion","dbKeyDeviceModel","dbKeyOsVersion","dbKeyLanguage","dbKeyTimezone","dbKeyLoggingEnabled","dbKeyLastUsedAt","lsKeyLastLoginTime","lsKeyLastLoginToken","lsKeyLastContactFieldId","meLogin","meLogout","meOpen","meCustomEvent","indexedDbName","indexedDbVersion","PERMISSION_DENIED","PERMISSION_GRANTED","PERMISSION_PROMPT","EVENT_ON_READY","EVENT_ON_SUBSCRIBE","EVENT_ON_UNSUBSCRIBE","EVENT_ON_PERMISSION_PROMPT","EVENT_ON_PERMISSION_DENIED","EVENT_ON_PERMISSION_GRANTED","EVENT_ON_SW_INIT_ERROR","EVENT_ON_PUSH_DELIVERY","EVENT_ON_PUT_NEW_MESSAGE_TO_INBOX_STORE","EVENT_ON_UPDATE_INBOX_MESSAGES","EVENT_ON_SHOW_NOTIFICATION_PERMISSION_DIALOG","EVENT_ON_HIDE_NOTIFICATION_PERMISSION_DIALOG","KEY_DEVICE_REGISTRATION_STATUS","DEVICE_REGISTRATION_STATUS_REGISTERED","DEVICE_REGISTRATION_STATUS_UNREGISTERED","base64ToBinary","base64String","base64","repeat","length","replace","atob","async","checkDevice","meWebPushDb","getClientId","exists","clientState","getClientState","decodedClientState","JWT","decode","pushTokenExists","pushToken","identified","contactField","Function","rawData","outputArray","Uint8Array","charCodeAt","undefined","payloadMessageDataProperties","id","sid","applicationCode","notificationSettings","payload","emarsysPayload","messageData","keys","map","prop","reduce","acc","contactInfo","isEmptyObject","obj","params","scope","constructor","storage","this","defaultMessage","message","clientId","contactToken","getContactToken","refreshToken","getRefreshToken","token","options","pos","header","JSON","parse","urlB64ToString","split","err","PostEventsOKStates","MEDeviceEventService","baseUrl","desRequest","storageWithLog","StorageWithLog","eventsData","success","apiEndpoint","response","post","includes","status","statusCode","body","json","stringify","path","appCode","getAppCode","static","MEClientService","meClientServiceRequest","clientDetails","getClientDetails","saveClientState","anonymous","toContactRequestBodyData","responseBody","Promise","all","setContactToken","setRefreshToken","put","delete","headers","setClientState","platform","getPlatform","applicationVersion","getApplicationVersion","deviceModel","getDeviceModel","osVersion","getOsVersion","sdkVersion","getSdkVersion","language","getLanguage","timezone","getTimezone","Error","contactFieldId","fieldId","openIdToken","contactFieldValue","fieldValue","contactFieldEncrypted","encrypted","defaultHeaders","MEV3ApiRequest","requestOrder","endpoint","headerData","requestInit","createPostRequestInit","fetch","createPutRequestInit","createDeleteRequestInit","createRequestInit","buildHeaders","cache","Headers","forEach","k","append","MEWebPushDb","indexDb","defaultTitle","getDBValueOrDefault","CONSTANTS","defaultImage","getBrowserIdsFromDb","toUpperCase","browserIdsString","browserIds","addLegacyBrowserId","legacyBrowserId","setDBValue","getDBValue","getClientIdForAppCode","then","v","Number","flag","toLowerCase","url","toString","version","clientIds","icon","Date","toISOString","deleteDBKey","setAppCode","setDefaultNotificationIcon","setDefaultNotificationTitle","setServiceWorkerUrl","setServiceWorkerScope","setApplicationServerPublicKey","setSdkVersion","setServiceWorkerVersion","setInitParams","setWebsitePushId","setPushPackageServiceUrl","setLastPermissionStatus","setPushToken","setContactFieldId","setContactFieldValue","setPlatform","setApplicationVersion","setDeviceModel","setTimezone","setLanguage","setOsVersion","setMeClientServiceApiBaseUrl","setMeDeviceEventServiceApiBaseUrl","deleteLastUsedAt","NotFoundMessage","IndexDb","openIndexDB","database","resolve","reject","request","transaction","objectStore","onsuccess","indexedDBInstance","close","onerror","e","result","event","defaultVal","indexedDB","open","target","onupgradeneeded","createObjectStore","keyPath","localStorage","getItem","setItem","removeItem","getRandomValues","rnds8","rng","crypto","uuid","test","byteToHex","push","slice","unsafeStringify","arr","offset","TypeError","_nodeId","_clockseq","_lastMSecs","_lastNSecs","buf","b","Array","node","clockseq","seedBytes","random","msecs","now","nsecs","dt","tl","tmh","parseInt","v35","hashfunc","generateUUID","namespace","_namespace","str","unescape","encodeURIComponent","bytes","stringToBytes","set","DNS","URL","getOutputLength","inputLength8","safeAdd","x","y","lsw","md5cmn","q","a","num","cnt","md5ff","md5gg","md5hh","md5ii","msg","input","output","length32","hexTab","hex","charAt","md5ToHexEncodedArray","len","olda","oldb","oldc","oldd","wordsToMd5","length8","Uint32Array","bytesToWords","randomUUID","rnds","f","z","ROTL","K","H","isArray","N","Math","ceil","M","j","pow","floor","W","T","main","global","getGlobal","predefinedCommands","WebEmarsysSdk","window","navigator","document","readyState","addEventListener","MeWebPush","ready","navigatorInfo","NavigatorInfo","pushNotificationSupportInfo","PushNotificationSupportInfo","eventEmitter","permissionPromises","canUsePromises","once","command","init","catch","registerOrHandleOnReadyCallback","registerEventCallback","registerChangePermissionCallback","attributes","eventData","dnd","events","type","timestamp","clicks","viewedMessages","meDeviceEventService","postEvents","retrySendAfterContactTokenRefresh","pushService","getPushService","permission","isPermissionDefault","askPermission","emit","getPermission","isDeviceRegistered","isFullyRegistered","getLoggedInContact","unsubscribe","subscribe","setLastUsedAt","Cache","setRegistrationStatus","initParams","getInitParams","getPushToken","serviceWorkerScope","getServiceWorkerScope","serviceWorkerVersion","getServiceWorkerVersion","meClientServiceApiBaseUrl","getMeClientServiceApiBaseUrl","meDeviceEventServiceApiBaseUrl","getMeDeviceEventServiceApiBaseUrl","contactFieldEncryped","Utils","assertOpenIdContactInfo","meClientService","linkClientToContact","assertContactInfo","finalContactInfo","cleanupClientOnBackend","clearAll","linkContactInfo","storeClientDetails","pushNotificationsSupported","enableLogging","setupMeClientService","clientServiceApiBaseUrl","setupMeDeviceEventService","deviceEventServiceApiBaseUrl","checkApplicationCode","checkClientId","persistPlatformInfo","persistConfig","initPushNotifications","enable","setClientIdForAppCode","completeNavigatorInfo","getAll","browser","userAgent","browserVersion","serviceWorkerUrl","serviceWorker","determineServiceWorkerScope","serviceWorkerAppPublicKey","applicationServerPublicKey","defaultNotificationIcon","defaultNotificationTitle","safariWebsitePushID","safariPushPackageServiceUrl","setLoggingEnabled","Boolean","valueOf","initParamsToPersist","setupPushService","enableSafariVapid","initialPushServiceProcessing","canUseSafariPush","config","buildApnsApiRegistrationConfig","SafariPushService","canUseServiceWorkers","vapidPushService","VapidPushService","updateServiceWorker","isResubscribeNeeded","isRegistered","isUnregistered","removePushToken","getWebsitePushId","getPushPackageServiceUrl","onReadyHandler","cmd","on","callback","currentPromise","registerCallbackForFurtherEvents","useCache","getRegistrationStatus","updateRegistrationStatus","generateAccessToken","win","hasServiceWorker","safari","browserRules","browserNameMapping","samsung","opera","navig","getUserAgent","getBrowserName","getVersion","browserName","nAgt","rule","regex","exec","getMappedBrowserName","mapped","BrowserVersionParser","parseBrowserVersion","getTimezoneOffset","pad","abs","nr","_navigator","verOffset","getVersionOffset","appVersion","substring","trimVersion","supportedAgents","agent","checkOffset","safariVersionOffset","indexOf","webPushDb","Notification","isPermissionGranted","requestPermission","subscription","getPushSubscription","toContactInfo","registerPushToken","registration","getServiceWorkerRegistration","pushManager","getSubscription","lastPermission","getLastPermissionStatus","registerServiceWorker","update","getServiceWorkerUrl","cleanCache","register","isRetry","applicationServerKey","getApplicationServerKey","existingSubscription","userVisibleOnly","handleSubscriptionWithEmptyEndpoint","getApplicationServerPublicKey","getPermissionInfo","application","pushNotification","deviceToken","savedWebSitePushId","savedWebSitePushIdExists","webSitePushIdChanged","_events","evt","param","fn","used","oncefun","removeListener","listener","idx","splice","totalListenerCount","sum","listenerCountFor","listeners"],"mappings":"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","file":"web-emarsys-sdk.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","export type LogFn = (...args: any) => void\n\nconst SdkContext = '[WebEmarsysSDK]'\nconst SwContext = '[WebEmarsysSW]'\n\ninterface IConsoleLogging {\n  trace: LogFn\n  debug: LogFn\n  info: LogFn\n  warn: LogFn\n  error: LogFn\n  log: LogFn\n  [key: string]: LogFn // just for being able to loop over the entries\n}\n\n// tslint:disable-next-line:no-empty\nconst NoopLogFn: LogFn = () => {}\n\nconst loggingFunction = (context: string, level: string) => {\n  return (...data: any[]) => {\n    (console as any)[level](context, ...data)\n  }\n}\n\n/**\n * Enables the Logger by setting all log function references to the respective\n * functions of the global console.\n */\nfunction enableLogger (enabled: boolean, context: string = SdkContext) {\n  const methods = ['trace', 'debug', 'info', 'warn', 'error', 'log']\n  if (enabled) {\n    for (const method of methods) {\n      Logger[method] = loggingFunction(context, method)\n    }\n  } else {\n    for (const method of methods) {\n      Logger[method] = NoopLogFn\n    }\n  }\n}\n\n/**\n * The logger which provides logging functions. By default the functions\n * are disabled which means they point to the NoopLogFn.\n */\nconst Logger: IConsoleLogging = {\n  trace: NoopLogFn,\n  debug: NoopLogFn,\n  info: NoopLogFn,\n  warn: NoopLogFn,\n  error: NoopLogFn,\n  log: NoopLogFn\n}\n\nconst exportedParts = {\n  NoopLogFn,\n  enableLogger,\n  SdkContext,\n  SwContext,\n  Logger\n}\n\nexport default exportedParts\n","export const defaultClientServiceApiBaseUrl = 'https://me-client.eservice.emarsys.net/v3'\nexport const defaultDeviceEventServiceApiBaseUrl = 'https://mobile-events.eservice.emarsys.net/v3'\nexport const defaultSafariPushPackageServiceUrl = 'https://me-client.eservice.emarsys.net'\n\nexport const defaultApplicationVersion = '0.0.0'\n\nexport const loginOverloadProtectionTime = 3600000\n\nexport const pushTitleProperty = 'title'\n\n// property names in push notification data\nexport const pushLinkProperty = 'link'\nexport const pushIconProperty = 'icon'\nexport const pushImageProperty = 'image'\nexport const pushActionsProperty = 'actions'\n\n// ingester requests password\nexport const applicationPassword = 'not-used'\n\n// indexDb keys\nexport const dbKeyDefaultNotificationTitle = 'pushDefaultNotificationTitle'\nexport const dbKeyDefaultNotificationIcon = 'pushDefaultNotificationIcon'\nexport const dbKeyApplicationCode = 'emarsysApplicationCode'\nexport const dbKeyMeClientServiceApiBaseUrl = 'meClientServiceApiBaseUrl'\nexport const dbKeyMeDeviceEventServiceApiBaseUrl = 'meDeviceEventServiceApiBaseUrl'\nexport const dbKeyServiceWorkerUrl = 'serviceWorkerUrl'\nexport const dbKeyServiceWorkerScope = 'serviceWorkerScope'\nexport const dbKeyApplicationServerPublicKey = 'applicationServerPublicKey'\nexport const dbKeyWebsitePushId = 'websitePushId'\nexport const dbKeyPushPackageServiceUrl = 'pushPackageServiceUrl'\nexport const dbKeyLastPermissionStatus = 'lastPermissionStatus'\nexport const dbKeyInitParams = 'initParams'\nexport const dbKeyBrowserId = 'browserId'\nexport const dbKeyBrowserIds = 'browserIds'\nexport const dbKeyXClientState = 'xClientState'\nexport const dbKeyContactToken = 'contactToken'\nexport const dbKeyRefreshToken = 'refreshToken'\nexport const dbKeySdkVersion = 'sdkVersion'\nexport const dbKeyServiceWorkerVersion = 'serviceWorkerVersion'\nexport const dbKeyPushToken = 'pushToken'\nexport const dbKeyContactFieldId = 'contactFieldId'\nexport const dbKeyContactFieldValue = 'contactFieldValue'\nexport const dbKeyPlatform = 'platform'\nexport const dbKeyApplicationVersion = 'applicationVersion'\nexport const dbKeyDeviceModel = 'deviceModel'\nexport const dbKeyOsVersion = 'osVersion'\nexport const dbKeyLanguage = 'language'\nexport const dbKeyTimezone = 'timezone'\nexport const dbKeyLoggingEnabled = 'loggingEnabled'\nexport const dbKeyLastUsedAt = 'lastUsedAt'\n\n// localStorage keys\nexport const lsKeyLastLoginTime = 'emarsysWebpushLastLoginTime'\nexport const lsKeyLastLoginToken = 'emarsysWebpushLastLoginToken'\nexport const lsKeyLastContactFieldId = 'emarsysWebpushLastContactFieldId'\n\n// ME endpoints\nexport const meLogin = '/users/login'\nexport const meLogout = '/users/logout'\nexport const meOpen = '/events/message_open'\nexport const meCustomEvent = '/events/'\n\n// Indexed DB\nexport const indexedDbName = 'EMARSYS_WEBPUSH_STORE'\nexport const indexedDbVersion = 1\n\n// Permissions\nexport const PERMISSION_DENIED = 'denied'\nexport const PERMISSION_GRANTED = 'granted'\nexport const PERMISSION_PROMPT = 'default'\n\n// Events\nexport const EVENT_ON_READY = 'onReady'\nexport const EVENT_ON_SUBSCRIBE = 'onSubscribe'\nexport const EVENT_ON_UNSUBSCRIBE = 'onUnsubscribe'\nexport const EVENT_ON_PERMISSION_PROMPT = 'onPermissionPrompt'\nexport const EVENT_ON_PERMISSION_DENIED = 'onPermissionDenied'\nexport const EVENT_ON_PERMISSION_GRANTED = 'onPermissionGranted'\nexport const EVENT_ON_SW_INIT_ERROR = 'onSWInitError'\nexport const EVENT_ON_PUSH_DELIVERY = 'onPushDelivery'\nexport const EVENT_ON_PUT_NEW_MESSAGE_TO_INBOX_STORE = 'onPutNewMessageToInboxStore'\nexport const EVENT_ON_UPDATE_INBOX_MESSAGES = 'onUpdateInboxMessages'\nexport const EVENT_ON_SHOW_NOTIFICATION_PERMISSION_DIALOG = 'onShowNotificationPermissionDialog'\nexport const EVENT_ON_HIDE_NOTIFICATION_PERMISSION_DIALOG = 'onHideNotificationPermissionDialog'\n\n// LocalStore\nexport const KEY_DEVICE_REGISTRATION_STATUS = 'registrationStatus'\n\n// Device registration status\nexport const DEVICE_REGISTRATION_STATUS_REGISTERED: string = 'registered'\nexport const DEVICE_REGISTRATION_STATUS_UNREGISTERED: string = 'unregistered'\n","import { MEWebPushDb } from './me-web-push-db'\nimport * as JWT from './jwt'\n\nexport type DeviceCheckResult = {\n  exists: boolean\n  pushTokenExists?: boolean\n  identified?: boolean\n}\n\nexport function getVersion () {\n  return __VERSION__\n}\n\nexport function getGlobal () {\n  /* eslint-disable */\n  return Function('return this')()\n}\n\nfunction base64ToBinary (base64String: string): string {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4)\n  const base64 = (base64String + padding)\n    .replace(/-/g, '+')\n    .replace(/_/g, '/')\n\n  return atob(base64)\n}\n\nexport function urlB64ToUint8Array (base64String: string): Uint8Array {\n  const rawData = base64ToBinary(base64String)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n\n  return outputArray\n}\n\nexport function urlB64ToString (base64String: string): string {\n  return base64ToBinary(base64String)\n}\n\nexport async function isDeviceRegistered (meWebPushDb: MEWebPushDb): Promise<boolean> {\n  const { exists, pushTokenExists } = await checkDevice(meWebPushDb)\n  const hasPushToken = pushTokenExists !== undefined ? pushTokenExists : false\n  return (exists && hasPushToken)\n}\n\n/**\n * Returns basic information about registration, push token and identified contact\n * based on the content of the client state\n */\nexport async function checkDevice (meWebPushDb: MEWebPushDb): Promise<DeviceCheckResult> {\n  const clientId = await meWebPushDb.getClientId()\n\n  if (!clientId) {\n    return { exists: false }\n  }\n\n  const clientState = await meWebPushDb.getClientState()\n  if (!clientState) {\n    return { exists: false }\n  }\n\n  const decodedClientState = JWT.decode(clientState)\n  if (!decodedClientState) {\n    return { exists: false }\n  }\n\n  const pushToken = decodedClientState.pushToken || null\n  const contactField = decodedClientState.contactField || null\n  return {\n    exists: true,\n    pushTokenExists: pushToken !== null,\n    identified: contactField !== null\n  }\n}\n\nexport const payloadMessageDataProperties: {[index: string]: string} = {\n  id: 'string',\n  sid: 'string',\n  applicationCode: 'string',\n  notificationSettings: 'object'\n}\n\n/**\n * Check if the WebPush Message payload is produced by Emarsys.\n * @param payload\n * @returns true if it is an Emarsys Payload\n */\nexport function isValidPayload (payload: any): boolean {\n  if (typeof payload !== 'object') return false\n  const emarsysPayload = payload.messageData\n  if (!emarsysPayload) return false\n  const isValidProperty = (prop: string) => {\n    return emarsysPayload[prop]\n      ? (typeof emarsysPayload[prop]) === payloadMessageDataProperties[prop]\n      : false\n  }\n  const result = Object.keys(payloadMessageDataProperties)\n    .map(isValidProperty)\n    .reduce((acc, r) => acc && r, true)\n  return result\n}\n\n/**\n * Checks the passed data and returns either the ContactInfo or undefined if the data does not fit\n * @param contactInfo The data which shall be converted\n */\nexport function toContactInfo (contactInfo?: {} | ContactInfo | undefined): ContactInfo | undefined {\n  if (contactInfo === undefined || Object.keys(contactInfo).length !== 3) {\n    return undefined\n  }\n  return contactInfo as ContactInfo\n}\n\nexport const isEmptyObject = (obj: any) => {\n  if (obj === null) return true\n  /* eslint-disable */\n  if (obj === undefined) return true\n  for (const property in obj) {\n    return false\n  }\n  return true\n}\n\nexport function determineServiceWorkerScope (params?: ServiceWorkerParams): string | undefined {\n  if (params) {\n    return params.scope\n  } else {\n    return undefined\n  }\n}\n","import logging from './logging'\nimport { MEWebPushDb } from './me-web-push-db'\nconst { Logger } = logging\n\ntype Params = {\n  level?: string\n  message?: string\n}\n\nexport class StorageWithLog {\n  private readonly storage: MEWebPushDb\n\n  constructor (storage: MEWebPushDb) {\n    this.storage = storage\n  }\n\n  private log (value: string | undefined, defaultMessage: string, params?: Params) {\n    const { level = 'error', message = defaultMessage } = params ?? {}\n    if (!value) Logger[level](message)\n    return value\n  }\n\n  async getClientId (params?: Params): Promise<string | undefined> {\n    const defaultMessage = 'Error: No client ID set for the browser!'\n    const clientId = await this.storage.getClientId()\n    return this.log(clientId, defaultMessage, params)\n  }\n\n  async getContactToken (params?: Params): Promise<string | undefined> {\n    const defaultMessage = 'Error: No contact token set!'\n    const contactToken = await this.storage.getContactToken()\n    return this.log(contactToken, defaultMessage, params)\n  }\n\n  async getClientState (params?: Params): Promise<string | undefined> {\n    const defaultMessage = 'Error: No client state set!'\n    const clientState = await this.storage.getClientState()\n    return this.log(clientState, defaultMessage, params)\n  }\n\n  async getRefreshToken (params?: Params): Promise<string | undefined> {\n    const defaultMessage = 'Unable to refresh contact token a refresh-token is missing!'\n    const refreshToken = await this.storage.getRefreshToken()\n    return this.log(refreshToken, defaultMessage, params)\n  }\n}\n","import { urlB64ToString } from './utils'\nimport logging from './logging'\n\nexport type DecodeOptions = {\n  header?: boolean\n}\n\nexport type DecodedToken = { [key: string]: any }\n\nexport function decode (token: string, options?: DecodeOptions): DecodedToken | null {\n  const opts = options ?? {}\n  const pos = opts.header === true ? 0 : 1\n  try {\n    return JSON.parse(urlB64ToString(token.split('.')[pos]))\n  } catch (err) {\n    logging.Logger.error('Error decoding token', err)\n    return null\n  }\n}\n","import logging from './logging'\nimport { MEV3ApiRequest } from './me-v3-api-request'\nimport { MEWebPushDb } from './me-web-push-db'\nimport { StorageWithLog } from './storage-with-log'\n\nconst { Logger } = logging\n\ntype MEEventType = 'internal' | 'custom' | 'other'\n\nexport type WebPushTreatments = {\n  ac?: { id: number, run_id: string }\n  rti?: { id: string, run_id: string }\n  ui?: { id: number, run_id: string }\n  ui_test?: { id: number, run_id: string }\n}\n\nexport type MEEventAttributes = Record<string, string>\n\nexport type MEEvent = {\n  type: MEEventType\n  name: string\n  timestamp: string\n  attributes?: MEEventAttributes\n}\n\n/**\n * The data we send\n */\nexport type MEEventsRequestData = {\n  dnd?: boolean\n  events: MEEvent[]\n  viewedMessages: any[]\n  clicks: any[]\n}\n\nexport type ClientDetails = {\n  platform: string\n  applicationVersion?: string\n  deviceModel?: string\n  osVersion?: string\n  sdkVersion?: string\n  language?: string\n  timezone?: string\n}\n\nexport type PostEventsResult = { success: boolean, statusCode?: number }\n\nconst PostEventsOKStates = [200, 204]\n\nexport class MEDeviceEventService {\n  private storage: MEWebPushDb\n  private readonly storageWithLog: StorageWithLog\n  private readonly baseUrl: string\n  private desRequest: MEV3ApiRequest\n\n  constructor (\n    baseUrl: string,\n    desRequest: MEV3ApiRequest,\n    storage: MEWebPushDb\n  ) {\n    this.storage = storage\n    this.storageWithLog = new StorageWithLog(storage)\n    this.baseUrl = `${baseUrl}/apps`\n    this.desRequest = desRequest\n  }\n\n  /**\n   * Post the passed data which includes 1 or more events to the device event service\n   * @param eventsData The events which shall be forwarded to the DES.\n   * @returns A promise which resolves to a PostEventsResult which indicates the success\n   *          of the operation and contains the returned status code.\n   */\n  async postEvents (eventsData: MEEventsRequestData): Promise<PostEventsResult> {\n    const clientId = await this.storageWithLog.getClientId()\n    const contactToken = await this.storageWithLog.getContactToken()\n    const clientState = await this.storageWithLog.getClientState()\n    if (!clientId || !contactToken || !clientState) {\n      return { success: false }\n    }\n    const apiEndpoint = await this.apiEndpoint('client/events')\n    const response = await this.desRequest.post(apiEndpoint, eventsData, { clientId, clientState, contactToken })\n    if (PostEventsOKStates.includes(response.status)) {\n      return { success: true, statusCode: response.status }\n    } else {\n      const body = await response.json()\n      Logger.warn('Error posting events to device event service', response.status, JSON.stringify(body))\n      return { success: false, statusCode: response.status }\n    }\n  }\n\n  private async apiEndpoint (path: string): Promise<string> {\n    const appCode = await this.storage.getAppCode()\n    return `${this.baseUrl}/${appCode!}/${path}`\n  }\n\n  static create (\n    baseUrl: string,\n    desRequest: MEV3ApiRequest,\n    storage: MEWebPushDb\n  ) {\n    return new MEDeviceEventService(baseUrl, desRequest, storage)\n  }\n}\n","import logging from './logging'\nimport { MEV3ApiRequest } from './me-v3-api-request'\nimport { MEWebPushDb } from './me-web-push-db'\nimport { StorageWithLog } from './storage-with-log'\n\nconst { Logger } = logging\n\ntype ContactRequestBodyData = {\n  anonymous: boolean\n  body: { contactFieldId: number, contactFieldValue: string, contactFieldEncrypted: boolean } |\n  { contactFieldId: number, openIdToken: string } | {}\n}\n\nexport type ClientDetails = {\n  platform: string\n  applicationVersion?: string\n  deviceModel?: string\n  osVersion?: string\n  sdkVersion?: string\n  language?: string\n  timezone?: string\n}\n\nexport class MEClientService {\n  private readonly storage: MEWebPushDb\n  private readonly storageWithLog: StorageWithLog\n  private readonly baseUrl: string\n  private meClientServiceRequest: MEV3ApiRequest\n\n  constructor (\n    baseUrl: string,\n    meClientServiceRequest: MEV3ApiRequest,\n    storage: MEWebPushDb\n  ) {\n    this.storage = storage\n    this.storageWithLog = new StorageWithLog(storage)\n    this.baseUrl = `${baseUrl}/domains`\n    this.meClientServiceRequest = meClientServiceRequest\n  }\n\n  /**\n   * Create or update the information which is related to a specific browser\n   */\n  async storeClientDetails (): Promise<boolean> {\n    const clientId = await this.storageWithLog.getClientId()\n    if (!clientId) {\n      return false\n    }\n    const apiEndpoint = await this.apiEndpoint('client')\n    const clientState = await this.storage.getClientState()\n    const clientDetails = await this.getClientDetails()\n    const response = await this.meClientServiceRequest.post(apiEndpoint, clientDetails, { clientId, clientState })\n    if (response.status === 204) {\n      await this.saveClientState(response)\n      return true\n    } else {\n      const body = await response.json()\n      Logger.error('Error storing client info', response.status, JSON.stringify(body))\n      return false\n    }\n  }\n\n  async linkClientToContact (contactInfo?: ContactInfo | OpenIdContactInfo): Promise<boolean> {\n    const clientId = await this.storageWithLog.getClientId()\n    const clientState = await this.storageWithLog.getClientState({ level: 'info' })\n    if (!clientId || !clientState) {\n      return false\n    }\n    const { anonymous, body } = this.toContactRequestBodyData(contactInfo)\n    const apiEndpoint = `${await this.apiEndpoint('client/contact')}${anonymous ? '?anonymous=true' : ''}`\n    const response = await this.meClientServiceRequest.post(apiEndpoint, body, { clientId, clientState })\n    if (response.status === 200) {\n      await this.saveClientState(response)\n      const responseBody = await response.json()\n      if (responseBody.contactToken && responseBody.refreshToken) {\n        await Promise.all([\n          this.storage.setContactToken(responseBody.contactToken),\n          this.storage.setRefreshToken(responseBody.refreshToken)\n        ])\n        return true\n      } else {\n        Logger.error('At least one of the expected response parts missing!')\n        return false\n      }\n    } else {\n      const body = await response.json()\n      Logger.error('Error linking contact to client', response.status, JSON.stringify(body))\n      return false\n    }\n  }\n\n  async generateAccessToken (): Promise<boolean> {\n    const clientId = await this.storageWithLog.getClientId()\n    const refreshToken = await this.storageWithLog.getRefreshToken()\n    const clientState = await this.storageWithLog.getClientState()\n    if (!clientId || !refreshToken || !clientState) {\n      return false\n    }\n    const apiEndpoint = await this.apiEndpoint('client/contact-token')\n    const body = { refreshToken }\n    const response = await this.meClientServiceRequest.post(apiEndpoint, body, { clientId, clientState })\n    if (response.status === 200) {\n      const responseBody = await response.json()\n      if (responseBody.contactToken) {\n        await this.storage.setContactToken(responseBody.contactToken)\n        return true\n      } else {\n        Logger.error('ContactToken is not part of response body!')\n        return false\n      }\n    } else {\n      const body = await response.json()\n      Logger.log('Error refreshing the contact token', response.status, JSON.stringify(body))\n      return false\n    }\n  }\n\n  async registerPushToken (pushToken: string): Promise<boolean> {\n    const clientId = await this.storageWithLog.getClientId()\n    const clientState = await this.storageWithLog.getClientState()\n    const contactToken = await this.storageWithLog.getContactToken({ message: 'Unable to register subscription as contactToken is missing!' })\n    if (!clientId || !clientState || !contactToken) {\n      return false\n    }\n\n    const apiEndpoint = await this.apiEndpoint('client/push-token')\n    const body = { pushToken }\n    const response = await this.meClientServiceRequest.put(apiEndpoint, body, { clientId, clientState, contactToken })\n    if (response.status === 204) {\n      await this.saveClientState(response)\n      return true\n    } else {\n      const body = await response.json()\n      Logger.error('Error registering the subscription', response.status, JSON.stringify(body))\n      return false\n    }\n  }\n\n  async removePushToken (): Promise<boolean> {\n    Logger.info('Remove push token')\n    const clientId = await this.storageWithLog.getClientId()\n    const clientState = await this.storageWithLog.getClientState({ level: 'info' })\n    const contactToken = await this.storageWithLog.getContactToken({ level: 'info' })\n    if (!clientId || !clientState || !contactToken) {\n      return false\n    }\n    const apiEndpoint = await this.apiEndpoint('client/push-token')\n    const response = await this.meClientServiceRequest.delete(apiEndpoint, {}, { clientId, clientState, contactToken })\n    if (response.status === 204) {\n      await this.saveClientState(response)\n      return true\n    } else {\n      const body = await response.json()\n      Logger.error('Error removing a subscription', response.status, JSON.stringify(body))\n      return true\n    }\n  }\n\n  private async apiEndpoint (path: string): Promise<string> {\n    const appCode = await this.storage.getAppCode()\n    return `${this.baseUrl}/${appCode!}/${path}`\n  }\n\n  private async saveClientState (response: Response) {\n    const clientState = response.headers.get('x-client-state')\n    if (clientState) {\n      await this.storage.setClientState(clientState)\n    } else {\n      Logger.error('Error: X-Client-State not found in response header!')\n    }\n  }\n\n  private async getClientDetails (): Promise<ClientDetails> {\n    const platform = await this.storage.getPlatform()\n    if (platform) {\n      const applicationVersion = await this.storage.getApplicationVersion()\n      const deviceModel = await this.storage.getDeviceModel()\n      const osVersion = await this.storage.getOsVersion()\n      const sdkVersion = await this.storage.getSdkVersion()\n      const language = await this.storage.getLanguage()\n      const timezone = await this.storage.getTimezone()\n      return {\n        platform,\n        applicationVersion,\n        deviceModel,\n        osVersion,\n        sdkVersion,\n        language,\n        timezone\n      }\n    } else {\n      throw new Error('platform not found in storage!')\n    }\n  }\n\n  private toContactRequestBodyData (contactInfo?: ContactInfo | OpenIdContactInfo): ContactRequestBodyData {\n    if (!contactInfo) {\n      return {\n        body: {},\n        anonymous: true\n      }\n    }\n\n    if ('openIdToken' in contactInfo) {\n      return {\n        body: {\n          contactFieldId: contactInfo.fieldId,\n          openIdToken: contactInfo.openIdToken\n        },\n        anonymous: false\n      }\n    }\n\n    return {\n      body: {\n        contactFieldId: contactInfo.fieldId,\n        contactFieldValue: contactInfo.fieldValue,\n        contactFieldEncrypted: contactInfo.encrypted\n      },\n      anonymous: false\n    }\n  }\n\n  static create (\n    baseUrl: string,\n    meClientServiceRequest: MEV3ApiRequest,\n    storage: MEWebPushDb\n  ) {\n    return new MEClientService(baseUrl, meClientServiceRequest, storage)\n  }\n}\n","const defaultHeaders: { [key: string]: string } = {\n  'Content-Type': 'application/json'\n}\n\nexport type HeaderData = {\n  clientId: string\n  clientState?: string\n  contactToken?: string\n}\n\nexport class MEV3ApiRequest {\n  private requestOrder: number\n\n  constructor () {\n    this.requestOrder = 0\n  }\n\n  async post (endpoint: string, body: object, headerData: HeaderData): Promise<Response> {\n    const requestInit: RequestInit = this.createPostRequestInit(body, headerData)\n    return fetch(endpoint, requestInit)\n  }\n\n  async put (endpoint: string, body: object, headerData: HeaderData): Promise<Response> {\n    const requestInit: RequestInit = this.createPutRequestInit(body, headerData)\n    return fetch(endpoint, requestInit)\n  }\n\n  async delete (endpoint: string, body: object, headerData: HeaderData): Promise<Response> {\n    const requestInit: RequestInit = this.createDeleteRequestInit(body, headerData)\n    return fetch(endpoint, requestInit)\n  }\n\n  private createPostRequestInit (body: object, headerData: HeaderData): RequestInit {\n    return this.createRequestInit('POST', body, headerData)\n  }\n\n  private createPutRequestInit (body: object, headerData: HeaderData): RequestInit {\n    return this.createRequestInit('PUT', body, headerData)\n  }\n\n  private createDeleteRequestInit (body: object, headerData: HeaderData): RequestInit {\n    return this.createRequestInit('DELETE', body, headerData)\n  }\n\n  private createRequestInit (method: string, body: object, headerData: HeaderData): RequestInit {\n    return {\n      method,\n      headers: this.buildHeaders(headerData),\n      mode: 'cors',\n      cache: 'default',\n      body: JSON.stringify(body)\n    }\n  }\n\n  private buildHeaders (headerData: HeaderData) {\n    const headers: Headers = new Headers()\n\n    Object.keys(defaultHeaders).forEach(k => {\n      headers.append(k, defaultHeaders[k])\n    })\n\n    headers.append('x-client-id', headerData.clientId)\n\n    if (headerData.clientState) {\n      headers.append('x-client-state', headerData.clientState)\n    }\n\n    if (headerData.contactToken) {\n      headers.append('x-contact-token', headerData.contactToken)\n    }\n\n    headers.append('x-request-order', `${this.requestOrder}`)\n    this.requestOrder += 1\n\n    return headers\n  }\n\n  static create (): MEV3ApiRequest {\n    return new MEV3ApiRequest()\n  }\n}\n","import * as CONSTANTS from './constants'\nimport { IndexDb } from './index-db'\n\n/**\n * The ME web push persisted information\n */\nexport class MEWebPushDb {\n  private readonly indexDb: IndexDb\n  private appCode: string | undefined\n\n  constructor (indexDb: IndexDb) {\n    this.indexDb = indexDb\n  }\n\n  async getDefaultNotificationTitle (defaultTitle: string): Promise<string> {\n    return (this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyDefaultNotificationTitle, defaultTitle) as Promise<string>)\n  }\n\n  async getDefaultNotificationIcon (defaultImage: string | undefined): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyDefaultNotificationIcon, defaultImage)\n  }\n\n  async getClientIdForAppCode (appCode: string | undefined): Promise<string | undefined> {\n    if (appCode !== undefined) {\n      const browserIds: ClientIdList = await this.getBrowserIdsFromDb()\n      return browserIds[appCode.toUpperCase()]\n    }\n  }\n\n  async getClientIds (): Promise<ClientIdList | undefined> {\n    return this.getBrowserIdsFromDb()\n  }\n\n  private async getBrowserIdsFromDb (): Promise<ClientIdList> {\n    const browserIdsString: string | undefined = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyBrowserIds)\n    let browserIds: { [appCode: string]: string } = {}\n    if (browserIdsString !== undefined) {\n      // tslint:disable-next-line:no-empty\n      try { browserIds = JSON.parse(browserIdsString) } catch (err) { }\n    }\n    browserIds = await this.addLegacyBrowserId(browserIds)\n    return browserIds\n  }\n\n  private async addLegacyBrowserId (browserIds: ClientIdList): Promise<ClientIdList> {\n    const legacyBrowserId = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyBrowserId)\n    if (legacyBrowserId !== undefined) {\n      const parts = legacyBrowserId.split('_')\n      browserIds[parts[0].toUpperCase()] = legacyBrowserId\n      await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserIds, JSON.stringify(browserIds))\n      await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserId, undefined)\n    }\n    return browserIds\n  }\n\n  async getInitParams (): Promise<IInitParams | undefined> {\n    const params = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyInitParams)\n    return params ? JSON.parse(params) : undefined\n  }\n\n  async getMeClientServiceApiBaseUrl (): Promise<string> {\n    return this.indexDb.getDBValue(CONSTANTS.dbKeyMeClientServiceApiBaseUrl)\n  }\n\n  async getMeDeviceEventServiceApiBaseUrl (): Promise<string> {\n    return this.indexDb.getDBValue(CONSTANTS.dbKeyMeDeviceEventServiceApiBaseUrl)\n  }\n\n  async getClientId (): Promise<string | undefined> {\n    const appCode = await this.getAppCode()\n    return this.getClientIdForAppCode(appCode)\n  }\n\n  async getClientState (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyXClientState)\n  }\n\n  async getRefreshToken (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyRefreshToken)\n  }\n\n  async getContactToken (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyContactToken)\n  }\n\n  async getAppCode (): Promise<string | undefined> {\n    if (!this.appCode) {\n      this.appCode = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyApplicationCode)\n    }\n    return this.appCode\n  }\n\n  async getWebsitePushId (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyWebsitePushId)\n  }\n\n  async getLastPermissionStatus (): Promise<NotificationPermission | undefined> {\n    return this.indexDb\n      .getDBValueOrDefault(CONSTANTS.dbKeyLastPermissionStatus)\n      .then(v => v as NotificationPermission)\n  }\n\n  async getApplicationServerPublicKey (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyApplicationServerPublicKey)\n  }\n\n  async getServiceWorkerUrl (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyServiceWorkerUrl)\n  }\n\n  async getServiceWorkerScope (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyServiceWorkerScope)\n  }\n\n  async getSdkVersion (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeySdkVersion)\n  }\n\n  async getServiceWorkerVersion (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyServiceWorkerVersion)\n  }\n\n  async getPushToken (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyPushToken)\n  }\n\n  async getContactFieldId (): Promise<number | undefined> {\n    const fieldId = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyContactFieldId)\n    return fieldId ? Number(fieldId) : undefined\n  }\n\n  async getContactFieldValue (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyContactFieldValue)\n  }\n\n  async getPushPackageServiceUrl (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyPushPackageServiceUrl)\n  }\n\n  async getPlatform (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyPlatform)\n  }\n\n  async getApplicationVersion (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyApplicationVersion)\n  }\n\n  async getDeviceModel (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyDeviceModel)\n  }\n\n  async getOsVersion (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyOsVersion)\n  }\n\n  async getLanguage (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyLanguage)\n  }\n\n  async getTimezone (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyTimezone)\n  }\n\n  async getLoggingEnabled (): Promise<boolean> {\n    const flag = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyLoggingEnabled)\n    return flag?.toLowerCase() === 'true'\n  }\n\n  async setTimezone (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyTimezone, value)\n  }\n\n  async setLanguage (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyLanguage, value)\n  }\n\n  async setOsVersion (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyOsVersion, value)\n  }\n\n  async setDeviceModel (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyDeviceModel, value)\n  }\n\n  async setApplicationVersion (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyApplicationVersion, value)\n  }\n\n  async setPlatform (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyPlatform, value)\n  }\n\n  async setPushPackageServiceUrl (url: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyPushPackageServiceUrl, url)\n  }\n\n  async setContactFieldValue (fieldValue: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyContactFieldValue, fieldValue)\n  }\n\n  async setContactFieldId (fieldId: number | undefined): Promise<void> {\n    await this.indexDb.setDBValue(\n      CONSTANTS.dbKeyContactFieldId,\n      typeof fieldId === 'number' ? fieldId.toString() : undefined\n    )\n  }\n\n  async setMeClientServiceApiBaseUrl (url: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyMeClientServiceApiBaseUrl, url)\n  }\n\n  async setMeDeviceEventServiceApiBaseUrl (url: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyMeDeviceEventServiceApiBaseUrl, url)\n  }\n\n  async setPushToken (pushToken: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyPushToken, pushToken)\n  }\n\n  async setServiceWorkerVersion (version: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyServiceWorkerVersion, version)\n  }\n\n  async setSdkVersion (sdkVersion: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeySdkVersion, sdkVersion)\n  }\n\n  async setLastPermissionStatus (status: NotificationPermission | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyLastPermissionStatus, status)\n  }\n\n  async setAppCode (appCode: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyApplicationCode, appCode)\n    this.appCode = appCode\n  }\n\n  async setClientState (clientState: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyXClientState, clientState)\n  }\n\n  async setContactToken (contactToken: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyContactToken, contactToken)\n  }\n\n  async setRefreshToken (refreshToken: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyRefreshToken, refreshToken)\n  }\n\n  private async setClientId (clientId: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserId, clientId)\n  }\n\n  async setClientIdForAppCode (clientId: string | undefined, appCode: string): Promise<void> {\n    const browserIds = await this.getBrowserIdsFromDb()\n    if (clientId !== undefined) {\n      browserIds[appCode.toUpperCase()] = clientId\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete browserIds[appCode.toUpperCase()]\n    }\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserIds, JSON.stringify(browserIds))\n  }\n\n  async setClientIds (clientIds: ClientIdList | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserIds, JSON.stringify(clientIds))\n  }\n\n  async setDefaultNotificationIcon (icon: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyDefaultNotificationIcon, icon)\n  }\n\n  async setDefaultNotificationTitle (icon: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyDefaultNotificationTitle, icon)\n  }\n\n  async setServiceWorkerUrl (url: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyServiceWorkerUrl, url)\n  }\n\n  async setServiceWorkerScope (scope: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyServiceWorkerScope, scope)\n  }\n\n  async setApplicationServerPublicKey (key: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyApplicationServerPublicKey, key)\n  }\n\n  async setInitParams (params: IInitParams | undefined) {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyInitParams, JSON.stringify(params))\n  }\n\n  async setWebsitePushId (id: string | undefined) {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyWebsitePushId, id)\n  }\n\n  async setLoggingEnabled (flag: boolean): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyLoggingEnabled, `${flag}`)\n  }\n\n  async setLastUsedAt (): Promise<void> {\n    const d = new Date().toISOString()\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyLastUsedAt, d)\n  }\n\n  async deleteLastUsedAt (): Promise<void> {\n    await this.indexDb.deleteDBKey(CONSTANTS.dbKeyLastUsedAt)\n  }\n\n  async clearAll (): Promise<void> {\n    await Promise.all([\n      this.setAppCode(undefined),\n      this.setClientState(undefined),\n      this.setContactToken(undefined),\n      this.setRefreshToken(undefined),\n      this.setDefaultNotificationIcon(undefined),\n      this.setDefaultNotificationTitle(undefined),\n      this.setServiceWorkerUrl(undefined),\n      this.setServiceWorkerScope(undefined),\n      this.setApplicationServerPublicKey(undefined),\n      this.setSdkVersion(undefined),\n      this.setServiceWorkerVersion(undefined),\n      this.setInitParams(undefined),\n      this.setWebsitePushId(undefined),\n      this.setPushPackageServiceUrl(undefined),\n      this.setLastPermissionStatus(undefined),\n      this.setPushToken(undefined),\n      this.setContactFieldId(undefined),\n      this.setContactFieldValue(undefined),\n      this.setPlatform(undefined),\n      this.setApplicationVersion(undefined),\n      this.setDeviceModel(undefined),\n      this.setTimezone(undefined),\n      this.setLanguage(undefined),\n      this.setOsVersion(undefined),\n      this.setMeClientServiceApiBaseUrl(undefined),\n      this.setMeDeviceEventServiceApiBaseUrl(undefined),\n      this.deleteLastUsedAt()\n    ])\n    this.appCode = undefined // clear the cache\n  }\n\n  static create (indexDb: IndexDb): MEWebPushDb {\n    return new MEWebPushDb(indexDb)\n  }\n}\n","import { indexedDbName, indexedDbVersion } from './constants'\n\nconst NotFoundMessage = 'not_found'\n\n/**\n * IndexedDb class handles browser's indexdb database operations\n */\nexport class IndexDb {\n  private name: string\n  private indexedDBInstance: IDBDatabase | undefined\n\n  constructor () {\n    this.name = 'keyValue'\n  }\n\n  /**\n   * Saves a value to browser's indexDb with a given key\n   */\n  async setDBValue (key: string, value: string | undefined): Promise<string> {\n    return this.openIndexDB().then((database: IDBDatabase) => {\n      return new Promise((resolve, reject) => {\n        const request = database\n          .transaction([this.name], 'readwrite')\n          .objectStore(this.name)\n          .put({ key, value })\n\n        request.onsuccess = () => {\n          this.indexedDBInstance = undefined\n          database.close()\n          return resolve(key)\n        }\n\n        request.onerror = (e) => {\n          this.indexedDBInstance = undefined\n          database.close()\n          return reject(e)\n        }\n      })\n    })\n  }\n\n  /**\n   * Saves a value to browser's indexDb with a given key\n   */\n  async deleteDBKey (key: IDBValidKey): Promise<boolean> {\n    return this.openIndexDB().then((database: IDBDatabase) => {\n      return new Promise((resolve, reject) => {\n        const request = database\n          .transaction([this.name], 'readwrite')\n          .objectStore(this.name)\n          .delete(key)\n\n        request.onsuccess = () => {\n          this.indexedDBInstance = undefined\n          database.close()\n          return resolve(true)\n        }\n\n        request.onerror = (e) => {\n          this.indexedDBInstance = undefined\n          database.close()\n          return reject(e)\n        }\n      })\n    })\n  }\n\n  /**\n   * Read a value from browser's indexDb\n   */\n  async getDBValue (key: string): Promise<string> {\n    const database: IDBDatabase = await this.openIndexDB()\n    return new Promise((resolve, reject) => {\n      const request = database\n        .transaction(this.name)\n        .objectStore(this.name)\n        .get(key)\n\n      request.onsuccess = () => {\n        const { result } = request\n        if (result) {\n          this.indexedDBInstance = undefined\n          database.close()\n          return resolve(result.value)\n        } else {\n          this.indexedDBInstance = undefined\n          database.close()\n          return reject(new Error(NotFoundMessage))\n        }\n      }\n\n      request.onerror = (event: Event) => {\n        this.indexedDBInstance = undefined\n        database.close()\n        return reject(event)\n      }\n    })\n  }\n\n  /**\n   * Read a value from browser's indexDb with fallback\n   */\n  async getDBValueOrDefault (key: string, defaultVal: string | undefined = undefined): Promise<string | undefined> {\n    try {\n      const result = await this.getDBValue(key)\n      return result\n    } catch (err) {\n      if (err.message === NotFoundMessage) {\n        return defaultVal\n      } else {\n        throw err\n      }\n    }\n  }\n\n  /**\n   * Opens browser's IndexDB database.\n   * If the database has opened already it doesn't reopen it but returns with the opened one.\n   */\n  private async openIndexDB (): Promise<IDBDatabase> {\n    return new Promise((resolve, reject) => {\n      if (this.indexedDBInstance) {\n        return resolve(this.indexedDBInstance)\n      }\n      const request = indexedDB.open(indexedDbName, indexedDbVersion)\n\n      request.onsuccess = (event: Event) => {\n        this.indexedDBInstance = (event.target! as any).result\n        return resolve(this.indexedDBInstance)\n      }\n\n      request.onerror = (event: Event) => {\n        return reject(event)\n      }\n\n      request.onupgradeneeded = (event: Event) => {\n        const database = (event.target! as any).result\n        database.createObjectStore('keyValue', {\n          keyPath: 'key'\n        })\n      }\n    })\n  }\n\n  static create (): IndexDb {\n    return new IndexDb()\n  }\n}\n","import * as CONSTANTS from './constants'\n\nexport function getRegistrationStatus (): string | undefined {\n  const status: string | null = localStorage.getItem(CONSTANTS.KEY_DEVICE_REGISTRATION_STATUS)\n  if (status) {\n    return status\n  } else {\n    return undefined\n  }\n}\n\nexport function setRegistrationStatus (status: string): void {\n  localStorage.setItem(CONSTANTS.KEY_DEVICE_REGISTRATION_STATUS, status)\n}\n\nexport function removeRegistrationStatus (): void {\n  localStorage.removeItem(CONSTANTS.KEY_DEVICE_REGISTRATION_STATUS)\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;","import MeWebPushSdkSingleton from './lib/me-web-push'\nimport { getGlobal } from './lib/utils'\n\nfunction main () {\n  console.log('my sdk B!');\n\n  const global = getGlobal()\n\n  let { WebEmarsysSdk } = global\n  let predefinedCommands\n\n  if (WebEmarsysSdk) {\n    predefinedCommands = WebEmarsysSdk\n  }\n\n  WebEmarsysSdk = MeWebPushSdkSingleton.create(window, navigator)\n  if (Array.isArray(predefinedCommands)) {\n    predefinedCommands.forEach(c => WebEmarsysSdk.push(c))\n  }\n\n  global.WebEmarsysSdk = WebEmarsysSdk\n}\n\nif (document.readyState === 'complete') {\n  main()\n} else {\n  window.addEventListener('load', main)\n}\n","import * as CONSTANTS from './constants'\nimport logging from './logging'\nimport { MEClientService } from './me-client-service'\nimport {\n  MEDeviceEventService,\n  MEEventsRequestData,\n  MEEventAttributes,\n  MEEvent,\n  PostEventsResult\n} from './me-device-event-service'\nimport { PushNotificationSupportInfo } from './push-notification-support-info'\nimport { NavigatorInfo } from './navigator-info'\nimport { MEWebPushDb } from './me-web-push-db'\nimport { IndexDb } from './index-db'\nimport { MEV3ApiRequest } from './me-v3-api-request'\nimport { SafariPushService, VapidPushService } from './push-service'\n\nimport { v4 as uuidv4 } from 'uuid'\nimport { IPushService } from './push-service/push-service.types'\nimport EventEmitter from './event-emitter'\nimport * as Cache from './local-storage'\nimport * as JWT from './jwt'\nimport * as Utils from './utils'\nimport { StorageWithLog } from './storage-with-log'\n\nconst { Logger, enableLogger } = logging\n\ntype ChainFunction = (param: any) => Promise<any> | any\n\n/**\n * EmarsysWebPush class is responsible for subscription for notifications.\n * This is the entry point what have to be called from site's index page.\n */\nexport default class MeWebPush {\n  private readonly navigator: Navigator\n  private readonly window: Window\n  private meClientService?: MEClientService\n  private meDeviceEventService?: MEDeviceEventService\n  private readonly pushNotificationSupportInfo: PushNotificationSupportInfo\n  private readonly navigatorInfo: NavigatorInfo\n  private readonly meWebPushDb: MEWebPushDb\n  private readonly storageWithLog: StorageWithLog\n  private readonly eventEmitter: EventEmitter\n  private readonly permissionPromises: { [key: string]: Promise<ChainFunction> }\n  private pushService?: IPushService\n  private ready: boolean = false\n\n  constructor (window: Window, navigator: Navigator) {\n    this.navigator = navigator\n    this.window = window\n    this.navigatorInfo = NavigatorInfo.create(navigator)\n    this.pushNotificationSupportInfo = PushNotificationSupportInfo.create(this.navigatorInfo, window)\n    this.meWebPushDb = MEWebPushDb.create(IndexDb.create())\n    this.storageWithLog = new StorageWithLog(this.meWebPushDb)\n    this.eventEmitter = new EventEmitter()\n    this.permissionPromises = {}\n    if (this.pushNotificationSupportInfo.canUsePromises()) {\n      this.permissionPromises = {\n        [CONSTANTS.EVENT_ON_PERMISSION_DENIED]: new Promise(\n          resolve => this.eventEmitter.once(CONSTANTS.EVENT_ON_PERMISSION_DENIED, resolve)\n        ),\n        [CONSTANTS.EVENT_ON_PERMISSION_PROMPT]: new Promise(\n          resolve => this.eventEmitter.once(CONSTANTS.EVENT_ON_PERMISSION_PROMPT, resolve)\n        ),\n        [CONSTANTS.EVENT_ON_PERMISSION_GRANTED]: new Promise(\n          resolve => this.eventEmitter.once(CONSTANTS.EVENT_ON_PERMISSION_GRANTED, resolve)\n        )\n      }\n    }\n  }\n\n  push (command: SdkCommand) {\n    if (typeof command === 'function') {\n      this.registerOrHandleOnReadyCallback(command)\n      return\n    }\n\n    if (!Array.isArray(command)) {\n      throw new Error('Invalid command!')\n    }\n\n    switch (command[0]) {\n      case 'init':\n        this\n          .init(command[1])\n          .then(() => Logger.debug('Initialized'))\n          .catch(err => Logger.error(err, 'Init failed!'))\n        break\n\n      case CONSTANTS.EVENT_ON_READY:\n        this.registerOrHandleOnReadyCallback(command[1])\n        break\n\n      case CONSTANTS.EVENT_ON_SUBSCRIBE:\n      case CONSTANTS.EVENT_ON_UNSUBSCRIBE:\n      case CONSTANTS.EVENT_ON_SW_INIT_ERROR:\n        this.registerEventCallback(command[0], command[1])\n        break\n\n      case CONSTANTS.EVENT_ON_PERMISSION_DENIED:\n      case CONSTANTS.EVENT_ON_PERMISSION_PROMPT:\n      case CONSTANTS.EVENT_ON_PERMISSION_GRANTED:\n        this.registerChangePermissionCallback(command[0], command[1])\n        break\n\n      default:\n        Logger.warn(`WARN: Command \"${JSON.stringify(command)}\" not yet implemented!`)\n    }\n  }\n\n  public async customEvent (name: string, attributes?: MEEventAttributes): Promise<boolean> {\n    try {\n      const eventData = {\n        dnd: true,\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        events: [{\n          type: 'custom',\n          name,\n          timestamp: new Date().toISOString(),\n          attributes: {\n            ...attributes,\n            'me:origin': 'webpush'\n          }\n        } as MEEvent],\n        clicks: [],\n        viewedMessages: []\n      }\n      let result: PostEventsResult = await this.meDeviceEventService!.postEvents(eventData)\n      if (!result.success && result.statusCode === 401) {\n        Logger.log('Contact token seems outdated, try to refresh and send again...')\n        result = await this.retrySendAfterContactTokenRefresh(eventData)\n      }\n      Logger.debug('Sent custom event', name, JSON.stringify(attributes), JSON.stringify(result))\n      return result.success\n    } catch (err) {\n      Logger.error('Error sending custom event', err.message, err)\n      return false\n    }\n  }\n\n  public async subscribe (): Promise<void> {\n    const pushService = this.getPushService()\n    const isPermissionDefault = pushService.isPermissionDefault()\n\n    let permission: NotificationPermission\n    if (isPermissionDefault) {\n      permission = await pushService.askPermission().catch(err => {\n        Logger.error('Safari ask permission error', err)\n        return CONSTANTS.PERMISSION_DENIED\n      })\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_PROMPT)\n    } else {\n      permission = pushService.getPermission()\n    }\n    const isDeviceRegistered = await this.isFullyRegistered(false)\n\n    if (permission === CONSTANTS.PERMISSION_GRANTED) {\n      const contactInfo: {} | ContactInfo | undefined = await this.getLoggedInContact()\n      Logger.debug('User granted permission for push notifications')\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_GRANTED)\n\n      if (!isDeviceRegistered) {\n        Logger.debug('Triggering push service unsubscribe')\n        await pushService.unsubscribe()\n        Logger.debug('Triggering push service subscribe')\n      } else {\n        Logger.debug('Triggering subscribe for token update')\n      }\n\n      await pushService.subscribe(contactInfo)\n      await this.meWebPushDb.setLastUsedAt()\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_SUBSCRIBE)\n      return\n    }\n\n    if (permission === CONSTANTS.PERMISSION_DENIED) {\n      Logger.log('User has declined push permission')\n      if (isDeviceRegistered) {\n        await pushService.unsubscribe()\n      }\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_DENIED)\n    }\n  }\n\n  public async unsubscribe (): Promise<void> {\n    try {\n      Logger.debug('Unsubscribing...')\n      await this.getPushService().unsubscribe()\n      Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_UNSUBSCRIBE)\n    } catch (err) {\n      Logger.error(err, 'Error occurred during unsubscribe')\n    }\n  }\n\n  public async getParams () {\n    const applicationCode = await this.meWebPushDb.getAppCode()\n    const clientId = await this.meWebPushDb.getClientIdForAppCode(applicationCode)\n    const initParams = await this.meWebPushDb.getInitParams()\n    const pushToken = await this.meWebPushDb.getPushToken()\n    const serviceWorkerScope = await this.meWebPushDb.getServiceWorkerScope()\n    const serviceWorkerVersion = await this.meWebPushDb.getServiceWorkerVersion()\n    const sdkVersion = await this.meWebPushDb.getSdkVersion()\n    const meClientServiceApiBaseUrl = await this.meWebPushDb.getMeClientServiceApiBaseUrl()\n    const meDeviceEventServiceApiBaseUrl = await this.meWebPushDb.getMeDeviceEventServiceApiBaseUrl()\n    const clientState = await this.meWebPushDb.getClientState()\n    const contactToken = await this.meWebPushDb.getContactToken()\n    const refreshToken = await this.meWebPushDb.getRefreshToken()\n\n    return {\n      applicationCode,\n      clientId,\n      pushToken,\n      serviceWorkerScope,\n      serviceWorkerVersion,\n      sdkVersion,\n      meClientServiceApiBaseUrl,\n      meDeviceEventServiceApiBaseUrl,\n      clientState,\n      contactToken,\n      refreshToken,\n      ...initParams\n    }\n  }\n\n  public async getLoggedInContact (): Promise<ContactInfo | {} | undefined> {\n    const clientState = await this.storageWithLog.getClientState({ level: 'info' })\n    if (!clientState) {\n      return undefined\n    }\n\n    const decodedClientState = JWT.decode(clientState)\n    if (!decodedClientState) {\n      Logger.error('Decoding failed', JSON.stringify(clientState))\n      return undefined\n    }\n    const contactField = decodedClientState.contactField\n    if (contactField === undefined) {\n      return undefined\n    }\n\n    if (contactField === null || Object.keys(contactField).length === 0) {\n      return {} // the anonymous contact!\n    }\n\n    if ((contactField.contactFieldId !== undefined) && contactField.contactFieldValue) {\n      return {\n        fieldId: contactField.contactFieldId,\n        fieldValue: contactField.contactFieldValue,\n        encrypted: (typeof contactField.contactFieldEncryped === 'boolean') ? contactField.contactFieldEncryped : false\n      }\n    } else {\n      Logger.error('contactField information incomplete', JSON.stringify(contactField))\n      return undefined\n    }\n  }\n\n  public async isLoggedIn (): Promise<boolean> {\n    const contactInfo = await this.getLoggedInContact()\n    return !(Utils.isEmptyObject(contactInfo) || contactInfo === undefined)\n  }\n\n  public async setOpenIdAuthenticatedContact (contactInfo: OpenIdContactInfo): Promise<boolean> {\n    this.assertOpenIdContactInfo(contactInfo)\n    return this.meClientService!.linkClientToContact(contactInfo)\n  }\n\n  public async login (contactInfo?: Omit<ContactInfo, 'encrypted'>): Promise<boolean> {\n    this.assertContactInfo(contactInfo)\n    const finalContactInfo = (contactInfo !== undefined) ? { ...contactInfo, encrypted: false } : contactInfo\n    return this.meClientService!.linkClientToContact(finalContactInfo)\n  }\n\n  public async logout (): Promise<boolean> {\n    return this.meClientService!.linkClientToContact()\n  }\n\n  public async removeAllDeviceData (): Promise<void> {\n    await this.cleanupClientOnBackend(this.meClientService!)\n    await this.meWebPushDb.clearAll()\n  }\n\n  public async isSubscribed (): Promise<boolean> {\n    return this.isFullyRegistered()\n  }\n\n  public async registerClient (contactInfo?: Omit<ContactInfo, 'encrypted'>): Promise<boolean> {\n    this.assertContactInfo(contactInfo)\n    const linkContactInfo = contactInfo ? { ...contactInfo, encrypted: false } : undefined\n    const result = await this.meClientService!.storeClientDetails() &&\n                   await this.meClientService!.linkClientToContact(linkContactInfo)\n    return result\n  }\n\n  public async getClientId (): Promise<string | undefined> {\n    const appCode = await this.meWebPushDb.getAppCode()\n\n    if (appCode === undefined) {\n      Logger.log('No APP code found in environment')\n      return undefined\n    }\n\n    const clientId = await this.meWebPushDb.getClientIdForAppCode(appCode)\n    if (clientId === undefined) {\n      Logger.log(`No client ID for APP code \"${appCode}\" found`)\n    }\n    return clientId\n  }\n\n  private assertContactInfo (contactInfo?: Omit<ContactInfo, 'encrypted'>) {\n    // tslint:disable-next-line\n    if (contactInfo && ((contactInfo.fieldId === undefined) || !contactInfo.fieldValue)) {\n      throw new Error(`Incomplete contact info: ${JSON.stringify(contactInfo)}`)\n    }\n  }\n\n  private assertOpenIdContactInfo (contactInfo: OpenIdContactInfo) {\n    // tslint:disable-next-line\n    if ((contactInfo.fieldId === undefined) || !contactInfo.openIdToken) {\n      throw new Error(`Incomplete contact info: ${JSON.stringify(contactInfo)}`)\n    }\n  }\n\n  /**\n   * Subscribe for push notifications and registers the subscription.\n   * This function have to be called from the site's page.\n   */\n  private async init (params: IInitParams): Promise<void> {\n    if (!this.pushNotificationSupportInfo.pushNotificationsSupported()) {\n      return Promise.reject(new Error('Web push not supported'))\n    }\n\n    this.enableLogging(params.enableLogging)\n\n    await this.setupMeClientService(params.clientServiceApiBaseUrl)\n\n    await this.setupMeDeviceEventService(params.deviceEventServiceApiBaseUrl)\n\n    const appCode = await this.checkApplicationCode(this.meClientService!, params.applicationCode)\n\n    await this.checkClientId(appCode)\n\n    await this.persistPlatformInfo(params)\n\n    await this.persistConfig(params)\n\n    // TODO: We could now report an \"app open\" with a frequency capping of 1h here...\n\n    await this.initPushNotifications(params)\n\n    // initialization is done, so any registered callback may be invoked now\n    this.eventEmitter.emit(CONSTANTS.EVENT_ON_READY)\n    this.ready = true\n  }\n\n  private enableLogging (enable?: boolean) {\n    enableLogger(enable === true)\n  }\n\n  private async setupMeClientService (baseUrl?: string): Promise<void> {\n    const meClientServiceApiBaseUrl = baseUrl ?? CONSTANTS.defaultClientServiceApiBaseUrl\n    this.meClientService = MEClientService.create(\n      meClientServiceApiBaseUrl, MEV3ApiRequest.create(), this.meWebPushDb\n    )\n    await this.meWebPushDb.setMeClientServiceApiBaseUrl(meClientServiceApiBaseUrl)\n  }\n\n  private async setupMeDeviceEventService (baseUrl?: string): Promise<void> {\n    const meDeviceEventServiceApiBaseUrl = baseUrl ?? CONSTANTS.defaultDeviceEventServiceApiBaseUrl\n    this.meDeviceEventService = MEDeviceEventService.create(\n      meDeviceEventServiceApiBaseUrl, MEV3ApiRequest.create(), this.meWebPushDb\n    )\n    await this.meWebPushDb.setMeDeviceEventServiceApiBaseUrl(meDeviceEventServiceApiBaseUrl)\n  }\n\n  private async checkApplicationCode (meClientService: MEClientService, applicationCode?: string): Promise<string> {\n    const appCode = await this.meWebPushDb.getAppCode()\n\n    if (!applicationCode) {\n      return Promise.reject(new Error('Can\\'t find application code!'))\n    }\n\n    const noSavedAppCode = !appCode\n    const appCodeChanged = appCode && appCode !== applicationCode\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (noSavedAppCode || appCodeChanged) {\n      await this.cleanupClientOnBackend(meClientService)\n      await this.meWebPushDb.clearAll()\n      await this.meWebPushDb.setAppCode(applicationCode)\n    }\n\n    return applicationCode\n  }\n\n  private async checkClientId (appCode: string): Promise<void> {\n    const clientId = await this.meWebPushDb.getClientIdForAppCode(appCode)\n\n    if (!clientId) {\n      Logger.log('No ClientId stored. Creating one...')\n      const id = appCode + '_' + uuidv4()\n      await this.meWebPushDb.setClientIdForAppCode(id, appCode)\n    } else {\n      Logger.log('ClientId exists:', clientId)\n    }\n  }\n\n  private async persistPlatformInfo (params: IInitParams): Promise<void> {\n    const completeNavigatorInfo = this.navigatorInfo.getAll()\n    await Promise.all([\n      this.meWebPushDb.setPlatform(completeNavigatorInfo.browser),\n      this.meWebPushDb.setApplicationVersion(params.applicationVersion ?? CONSTANTS.defaultApplicationVersion),\n      this.meWebPushDb.setDeviceModel(completeNavigatorInfo.userAgent),\n      this.meWebPushDb.setOsVersion(completeNavigatorInfo.browserVersion),\n      this.meWebPushDb.setLanguage(completeNavigatorInfo.language),\n      this.meWebPushDb.setTimezone(completeNavigatorInfo.timezone),\n      this.meWebPushDb.setSdkVersion(__VERSION__)\n    ])\n  }\n\n  private async persistConfig (params: IInitParams): Promise<void> {\n    const serviceWorkerUrl = params.serviceWorker ? params.serviceWorker.url : undefined\n    const serviceWorkerScope = Utils.determineServiceWorkerScope(params.serviceWorker)\n    const serviceWorkerAppPublicKey = params.serviceWorker ? params.serviceWorker.applicationServerPublicKey : undefined\n    await Promise.all([\n      this.meWebPushDb.setServiceWorkerUrl(serviceWorkerUrl),\n      this.meWebPushDb.setServiceWorkerScope(serviceWorkerScope),\n      this.meWebPushDb.setApplicationServerPublicKey(serviceWorkerAppPublicKey),\n      this.meWebPushDb.setDefaultNotificationIcon(params.defaultNotificationIcon),\n      this.meWebPushDb.setDefaultNotificationTitle(params.defaultNotificationTitle),\n      this.meWebPushDb.setWebsitePushId(params.safariWebsitePushID),\n      this.meWebPushDb.setPushPackageServiceUrl(params.safariPushPackageServiceUrl),\n      this.meWebPushDb.setLoggingEnabled(Boolean(params.enableLogging).valueOf()),\n      this.meWebPushDb.setMeClientServiceApiBaseUrl(\n        params.clientServiceApiBaseUrl ?? CONSTANTS.defaultClientServiceApiBaseUrl\n      ),\n      this.meWebPushDb.setMeDeviceEventServiceApiBaseUrl(\n        params.deviceEventServiceApiBaseUrl ?? CONSTANTS.defaultDeviceEventServiceApiBaseUrl\n      ),\n      this.meWebPushDb.setLastUsedAt()\n    ])\n  }\n\n  private async initPushNotifications (params: IInitParams): Promise<void> {\n    const initParamsToPersist = {\n      ...params,\n      enableLogging: Boolean(params.enableLogging).valueOf()\n    }\n    await this.meWebPushDb.setInitParams(initParamsToPersist)\n\n    await this.setupPushService(params.enableSafariVapid)\n\n    try {\n      await this.initialPushServiceProcessing(initParamsToPersist)\n    } catch (err) {\n      Logger.error(err, 'Internal error')\n    }\n  }\n\n  private async setupPushService (enableSafariVapid?: boolean): Promise<void> {\n    if (!this.meClientService) {\n      throw new Error('Me client service connection is not set up!')\n    }\n    if (enableSafariVapid !== true && this.pushNotificationSupportInfo.canUseSafariPush()) {\n      const config = await this.buildApnsApiRegistrationConfig()\n      this.pushService = new SafariPushService(this.meWebPushDb, config, this.meClientService)\n      return\n    }\n\n    if (this.pushNotificationSupportInfo.canUseServiceWorkers()) {\n      const vapidPushService: VapidPushService = new VapidPushService(this.meWebPushDb, this.meClientService)\n      await vapidPushService.updateServiceWorker()\n      this.pushService = vapidPushService\n    }\n  }\n\n  private async initialPushServiceProcessing (initParams: IInitParams) {\n    const pushService = this.getPushService()\n    const permission = pushService.getPermission()\n\n    if (permission === CONSTANTS.PERMISSION_GRANTED) {\n      await this.meWebPushDb.setLastPermissionStatus(permission)\n    }\n\n    const isResubscribeNeeded = await pushService.isResubscribeNeeded()\n\n    if (isResubscribeNeeded) {\n      Logger.log('Re-subscribe is needed.')\n      await this.unsubscribe()\n    }\n\n    const isRegistered = await this.isFullyRegistered(false)\n\n    switch (permission) {\n      case CONSTANTS.PERMISSION_PROMPT:\n        // device can't be registered if permission is \"default\" (so \"prompt\")\n        if (isRegistered) {\n          Logger.debug('Unsubscribing in PROMPT state')\n          this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_PROMPT)\n          await this.unsubscribe()\n        }\n\n        break\n\n      case CONSTANTS.PERMISSION_DENIED:\n        if (isRegistered) {\n          await this.unsubscribe()\n        }\n        this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_DENIED)\n        break\n\n      case CONSTANTS.PERMISSION_GRANTED:\n        if (!MeWebPush.isUnregistered()) {\n          await this.subscribe()\n        }\n        this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_GRANTED)\n        break\n    }\n  }\n\n  private async cleanupClientOnBackend (meClientService: MEClientService): Promise<void> {\n    Logger.debug('Cleanup of client information on backend side')\n    const { exists, pushTokenExists, identified } = await Utils.checkDevice(this.meWebPushDb)\n\n    if (!exists) {\n      Logger.debug('The browser is not registered at all.')\n      return\n    }\n\n    if (pushTokenExists) {\n      const result = await meClientService.removePushToken()\n      Logger.log('Removed registered push token:', result)\n    }\n\n    if (identified) {\n      const result = await meClientService.linkClientToContact()\n      Logger.log('Assigned anonymous contact:', result)\n    }\n  }\n\n  private getPushService (): IPushService {\n    if (this.pushService) {\n      return this.pushService\n    } else {\n      throw new Error('Push service is not set up!')\n    }\n  }\n\n  private async buildApnsApiRegistrationConfig (): Promise<ApnsApiRegistrationConfig> {\n    const safariWebsitePushID = await this.meWebPushDb.getWebsitePushId()\n    const applicationCode = await this.meWebPushDb.getAppCode()\n    const clientId = await this.meWebPushDb.getClientIdForAppCode(applicationCode)\n    if (safariWebsitePushID && applicationCode && clientId) {\n      const safariPushPackageServiceUrl = await this.meWebPushDb.getPushPackageServiceUrl()\n      return {\n        clientId,\n        applicationCode,\n        safariWebsitePushID,\n        safariPushPackageServiceUrl: safariPushPackageServiceUrl ?? CONSTANTS.defaultSafariPushPackageServiceUrl\n      }\n    } else {\n      throw new Error('safariWebsitePushID must be specified for Safari support!')\n    }\n  }\n\n  private onReadyHandler (cmd: HandlerFn) {\n    if (this.ready) {\n      cmd(undefined) // TODO: Pass the API (me client service & DES)\n    } else {\n      this.eventEmitter.on(CONSTANTS.EVENT_ON_READY, (params) => cmd(undefined, params))\n    }\n  }\n\n  private registerOrHandleOnReadyCallback (callback: SdkOnReadyCallback) {\n    this.onReadyHandler(callback)\n  }\n\n  private registerEventCallback (name: MeWebSdkEvent, callback: HandlerFn) {\n    this.eventEmitter.on(name, (params: any) => {\n      return callback(undefined, params) // TODO: Pass API instead of undefined here\n    })\n  }\n\n  private registerChangePermissionCallback (name: MeWebSdkEvent, callback: HandlerFn) {\n    const currentPromise = this.permissionPromises[name]\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises, @typescript-eslint/strict-boolean-expressions\n    if (!currentPromise) {\n      return\n    }\n\n    const registerCallbackForFurtherEvents = this.registerEventCallback.bind(this)\n    currentPromise\n      .then(() => {\n        // after the first occurrence was handled register the callback in the \"normal\"\n        // way so that subsequent events are forwarded too.\n        registerCallbackForFurtherEvents(name, callback)\n        return callback(undefined) // TODO: Replace undefined with this.API...\n      })\n      .catch((err) => Logger.error(err, 'Error while handling permission change callback.'))\n  }\n\n  private async isFullyRegistered (useCache: boolean = true): Promise<boolean> {\n    const status: string | undefined = Cache.getRegistrationStatus()\n    Logger.debug('Local status is', status)\n\n    if (status === undefined || !useCache) {\n      return this.updateRegistrationStatus()\n    } else {\n      return Promise.resolve(status === CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED)\n    }\n  }\n\n  private static isUnregistered (): boolean {\n    const status = Cache.getRegistrationStatus()\n    return (status === CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n  }\n\n  private async updateRegistrationStatus (): Promise<boolean> {\n    Logger.debug('Checking device...')\n    const isRegistered = await this.pushService!.isRegistered()\n    Logger.debug('Device exists & has token', isRegistered)\n    const status = isRegistered\n      ? CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED\n      : CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED\n    Cache.setRegistrationStatus(status)\n    return status === CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED\n  }\n\n  private async retrySendAfterContactTokenRefresh (eventsData: MEEventsRequestData): Promise<PostEventsResult> {\n    const success = await this.meClientService!.generateAccessToken()\n    if (!success) {\n      Logger.error('Refresh of access token failed!')\n      return { success: false }\n    }\n    return this.meDeviceEventService!.postEvents(eventsData)\n  }\n\n  public static create (window: Window, navigator: Navigator): MeWebPush {\n    return new MeWebPush(window, navigator)\n  }\n}\n","import { NavigatorInfo } from './navigator-info'\n\nexport class PushNotificationSupportInfo {\n  private readonly navigatorInfo: NavigatorInfo\n  private readonly window: Window\n\n  constructor (navigatorInfo: NavigatorInfo, win: Window) {\n    this.navigatorInfo = navigatorInfo\n    this.window = win\n  }\n\n  pushNotificationsSupported (): boolean {\n    return this.canUseSafariPush() || this.canUseServiceWorkers()\n  }\n\n  canUseServiceWorkers (): boolean {\n    return (\n      this.navigatorInfo.hasServiceWorker() &&\n      ('PushManager' in this.window)\n    )\n  }\n\n  canUseSafariPush (): boolean {\n    return 'safari' in this.window && 'pushNotification' in this.window.safari\n  }\n\n  canUsePromises (): boolean {\n    return 'Promise' in this.window\n  }\n\n  static create (navigatorInfo: NavigatorInfo, win: Window): PushNotificationSupportInfo {\n    return new PushNotificationSupportInfo(navigatorInfo, win)\n  }\n}\n","import { BrowserVersionParser } from './browser-version-parser'\n\nexport type BrowserName =\n  | 'edge'\n  | 'samsung'\n  | 'chrome'\n  | 'firefox'\n  | 'safari'\n  | 'opera'\n\ntype UserAgentRule = [BrowserName, RegExp]\n\nconst browserRules: UserAgentRule[] = [\n  ['edge', /Edge\\/([0-9._]+)/],\n  ['edge', /EdgiOS\\/([0-9._]+)/],\n  ['edge', /EdgA?\\/([0-9.]+)/],\n  ['samsung', /SamsungBrowser\\/([0-9.]+)/],\n  ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9.]+)(:?\\s|$)/],\n  ['firefox', /Firefox\\/([0-9.]+)(?:\\s|$)/],\n  ['opera', /Opera Mini.*Version\\/([0-9.]+)/],\n  ['opera', /Opera\\/([0-9.]+)(?:\\s|$)/],\n  ['opera', /OPR\\/([0-9.]+)(:?\\s|$)/],\n  ['safari', /Version\\/([0-9._]+).*Safari/]\n]\n\nconst browserNameMapping: { [key: string]: BrowserName} = {\n  samsung: 'chrome',\n  opera: 'chrome'\n}\n\nexport type GetAllResult = {\n  userAgent: string\n  browser: string\n  browserVersion: string\n  timezone: string\n  language: string\n}\n\nexport class NavigatorInfo {\n  private navigator: Navigator\n\n  constructor (navig: Navigator) {\n    this.navigator = navig\n  }\n\n  /**\n   * Get environment info like browserVersion language etc.\n   */\n  getAll (): GetAllResult {\n    return {\n      userAgent: this.getUserAgent(),\n      browser: this.getBrowserName(),\n      browserVersion: this.getVersion(),\n      timezone: this.getTimezone(),\n      language: this.getLanguage()\n    }\n  }\n\n  hasServiceWorker (): boolean {\n    return ('serviceWorker' in this.navigator)\n  }\n\n  private getUserAgent (): string {\n    return this.navigator.userAgent\n  }\n\n  private getBrowserName (): string {\n    let browserName: BrowserName = 'chrome'\n    const nAgt = this.navigator.userAgent\n    for (const rule of browserRules) {\n      const [name, regex] = rule\n      const match = regex.exec(nAgt)\n      if (match) {\n        browserName = name\n        break\n      }\n    }\n    return this.getMappedBrowserName(browserName)\n  }\n\n  private getMappedBrowserName (name: BrowserName): BrowserName {\n    const mapped = browserNameMapping[name]\n    if (mapped) {\n      return mapped\n    } else {\n      return name\n    }\n  }\n\n  private getVersion (): string {\n    return BrowserVersionParser.parseBrowserVersion(this.navigator)\n  }\n\n  private getTimezone (): string {\n    const offset = new Date().getTimezoneOffset()\n    const timezone = ((offset < 0 ? '+' : '-') +\n      this.pad(Math.abs(offset / 60), 2) +\n      this.pad(Math.abs(offset % 60), 2))\n    return timezone\n  }\n\n  private getLanguage () {\n    return this.navigator.language\n  }\n\n  /**\n   * Convert number to string and pad the string with zeros to be the required length\n   */\n  private pad (nr: number, length: number): string {\n    let str = nr.toString()\n    while (str.length < length) {\n      str = '0' + str\n    }\n    return str\n  }\n\n  static create (navig: Navigator): NavigatorInfo {\n    return new NavigatorInfo(navig)\n  }\n}\n","// eslint-disable-next-line  @typescript-eslint/no-extraneous-class\nexport class BrowserVersionParser {\n  static parseBrowserVersion (_navigator: Navigator): string {\n    const verOffset = BrowserVersionParser.getVersionOffset(_navigator.userAgent)\n    if (verOffset === -1) {\n      return _navigator.appVersion\n    }\n    const version = _navigator.userAgent.substring(verOffset)\n    return BrowserVersionParser.trimVersion(version)\n  }\n\n  private static getVersionOffset (userAgent: string): number {\n    // The order of the supported agents is important!!!\n    const supportedAgents = ['SamsungBrowser', 'OPR', 'Edge', 'Edg', 'Chrome', 'Safari', 'Firefox']\n    for (let i = 0; i < supportedAgents.length; i++) {\n      const agent = supportedAgents[i]\n      const offset = BrowserVersionParser.checkOffset(agent, userAgent)\n      if (agent === 'Safari' && offset !== -1) {\n        const safariVersionOffset = BrowserVersionParser.checkOffset('Version', userAgent)\n        if (safariVersionOffset !== -1) {\n          return safariVersionOffset\n        }\n        return offset\n      }\n      if (offset !== -1) {\n        return offset\n      }\n    }\n    return -1\n  }\n\n  private static checkOffset (name: string, userAgent: string): number {\n    const offset = userAgent.indexOf(name)\n    return offset >= 0 ? offset + name.length + 1 : -1\n  }\n\n  private static trimVersion (version: string): string {\n    const regex = /^(([0-9]|\\.)*)[ );]/\n    if (!regex.test(version)) {\n      return version\n    }\n    return regex.exec(version)![1]\n  }\n}\n","export { VapidPushService } from './vapid-push-service'\nexport { SafariPushService } from './safari-push-service'\n","import { v4 as uuidv4 } from 'uuid'\n\nimport * as CONSTANTS from '../constants'\nimport logging from '../logging'\nimport { IPushService } from './push-service.types'\nimport { MEWebPushDb } from '../me-web-push-db'\nimport { MEClientService } from '../me-client-service'\nimport * as Cache from '../local-storage'\nimport * as Utils from '../utils'\n\nexport class VapidPushService implements IPushService {\n  private registration?: ServiceWorkerRegistration\n  private readonly webPushDb: MEWebPushDb\n  private readonly meClientService: MEClientService\n\n  constructor (\n    webPushDb: MEWebPushDb,\n    meClientService: MEClientService\n  ) {\n    this.webPushDb = webPushDb\n    this.meClientService = meClientService\n  }\n\n  public getPermission (): NotificationPermission {\n    return Notification.permission\n  }\n\n  public isPermissionGranted (): boolean {\n    return this.getPermission() === CONSTANTS.PERMISSION_GRANTED\n  }\n\n  public isPermissionDefault (): boolean {\n    return this.getPermission() === CONSTANTS.PERMISSION_PROMPT\n  }\n\n  public async askPermission (): Promise<NotificationPermission> {\n    return Notification.requestPermission()\n  }\n\n  public async getPushToken (): Promise<WebPushToken | undefined> {\n    return this.webPushDb.getPushToken()\n  }\n\n  public async subscribe (contactInfo?: {} | ContactInfo): Promise<void> {\n    const isPermissionGranted = this.isPermissionGranted()\n\n    if (!isPermissionGranted) {\n      logging.Logger.error('Permission must be granted before subscription!')\n      return\n    }\n\n    // get browser subscription\n    const subscription = await this.getPushSubscription()\n    if (subscription !== null) {\n      const pushToken = JSON.stringify(subscription)\n      logging.Logger.debug('Got valid subscription:', pushToken)\n\n      const storedPushToken = await this.getPushToken()\n      if (storedPushToken !== pushToken) {\n        logging.Logger.debug('Registering device, linking and registering push token')\n        if (\n          await this.meClientService.storeClientDetails() &&\n          await this.meClientService.linkClientToContact(Utils.toContactInfo(contactInfo)) &&\n          await this.meClientService.registerPushToken(pushToken)\n        ) {\n          // persist in local DB after all actions were successful\n          await this.webPushDb.setPushToken(pushToken)\n          Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED)\n        }\n      }\n    } else {\n      logging.Logger.warn('Issue fetching the actual push token (subscription).')\n    }\n  }\n\n  public async unsubscribe (): Promise<void> {\n    logging.Logger.log('VAPID: unsubscribe')\n    // get service worker registration\n    const registration = await this.getServiceWorkerRegistration()\n\n    logging.Logger.log('VAPID: registration', registration)\n    // get current subscription\n    const subscription = await registration.pushManager.getSubscription()\n    logging.Logger.log('VAPID: subscription', subscription)\n\n    // remove token\n    await this.meClientService.removePushToken()\n    await this.webPushDb.setPushToken(undefined)\n\n    if (!subscription) {\n      return\n    }\n\n    await subscription.unsubscribe()\n    Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n    // TODO: await this.unregisterDevice()\n  }\n\n  public async isRegistered (): Promise<boolean> {\n    return Utils.isDeviceRegistered(this.webPushDb)\n  }\n\n  public async isResubscribeNeeded (): Promise<boolean> {\n    // check change permission status\n    const lastPermission = await this.webPushDb.getLastPermissionStatus()\n    const permission = this.getPermission()\n\n    if (lastPermission !== permission) {\n      await this.webPushDb.setLastPermissionStatus(permission)\n    }\n    return (lastPermission !== permission)\n  }\n\n  public async updateServiceWorker (): Promise<ServiceWorkerRegistration> {\n    return this.registerServiceWorker()\n  }\n\n  private async getServiceWorkerRegistration (): Promise<ServiceWorkerRegistration> {\n    if (!this.registration) {\n      logging.Logger.debug('No service worker found. Registering service worker...')\n      this.registration = await this.registerServiceWorker()\n\n      // eslint-disable-next-line  @typescript-eslint/strict-boolean-expressions\n      if (!this.registration) {\n        throw new Error('Internal Error: Can\\'t register service worker!')\n      } else {\n        logging.Logger.log('Service worker is registered')\n        await this.registration.update()\n      }\n    }\n\n    return this.registration\n  }\n\n  private async registerServiceWorker (): Promise<ServiceWorkerRegistration> {\n    const url = await this.webPushDb.getServiceWorkerUrl()\n    const scope = await this.webPushDb.getServiceWorkerScope()\n    const sdkVersion = await this.webPushDb.getSdkVersion()\n    const serviceWorkerVersion = await this.webPushDb.getServiceWorkerVersion()\n\n    // add clean cache get parameter if sdk version and service worker\n    // version is not the same to trigger an update of the service worker\n    const cleanCache = (sdkVersion !== serviceWorkerVersion) ? `?cache_clean=${uuidv4()}` : ''\n    const options = scope ? { scope } : undefined\n\n    return navigator\n      .serviceWorker\n      .register(`/${url!}${cleanCache}`, options)\n  }\n\n  private async getPushSubscription (isRetry: boolean = false): Promise<PushSubscription | null> {\n    const registration = await this.getServiceWorkerRegistration()\n    const applicationServerKey = await this.getApplicationServerKey()\n\n    const existingSubscription = await registration.pushManager.getSubscription()\n    const subscription = existingSubscription !== null\n      ? existingSubscription\n      : await registration.pushManager.subscribe({ userVisibleOnly: true, applicationServerKey })\n\n    if (subscription.endpoint.length > 0) {\n      return subscription\n    } else {\n      if (isRetry) {\n        logging.Logger.warn('Retry to get subscription without empty endpoint failed. Giving up.')\n        return null\n      } else {\n        return this.handleSubscriptionWithEmptyEndpoint(subscription)\n      }\n    }\n  }\n\n  private async handleSubscriptionWithEmptyEndpoint (subscription: PushSubscription): Promise<PushSubscription | null> {\n    logging.Logger.warn('Got subscription with empty endpoint', subscription)\n    const success = await subscription.unsubscribe()\n\n    if (!success) {\n      logging.Logger.warn('Unable to unsubscribe from subscription with empty endpoint')\n      return null\n    }\n\n    logging.Logger.debug('Retrying to get a subscription without an empty endpoint')\n    return this.getPushSubscription(true)\n  }\n\n  private async getApplicationServerKey (): Promise<string | undefined> {\n    return this.webPushDb.getApplicationServerPublicKey()\n  }\n}\n","\nimport * as CONSTANTS from '../constants'\n\nimport logging from '../logging'\nimport { IPushService } from './push-service.types'\nimport { MEWebPushDb } from '../me-web-push-db'\nimport { MEClientService } from '../me-client-service'\nimport * as Cache from '../local-storage'\nimport * as Utils from '../utils'\n\nexport class SafariPushService implements IPushService {\n  private readonly webPushDb: MEWebPushDb\n  private readonly config: ApnsApiRegistrationConfig\n  private readonly meClientService: MEClientService\n\n  constructor (\n    webPushDb: MEWebPushDb,\n    config: ApnsApiRegistrationConfig,\n    meClientService: MEClientService\n  ) {\n    this.webPushDb = webPushDb\n    this.config = config\n    this.meClientService = meClientService\n  }\n\n  public getPermission (): NotificationPermission {\n    const { permission } = this.getPermissionInfo()\n    return permission\n  }\n\n  public isPermissionGranted (): boolean {\n    return this.getPermission() === CONSTANTS.PERMISSION_GRANTED\n  }\n\n  public isPermissionDefault (): boolean {\n    return this.getPermission() === CONSTANTS.PERMISSION_PROMPT\n  }\n\n  public async askPermission (): Promise<NotificationPermission> {\n    const application = this.config.applicationCode\n    const clientId = this.config.clientId\n    const payload = { application, clientId }\n\n    return new Promise(resolve => {\n      safari.pushNotification.requestPermission(\n        this.config.safariPushPackageServiceUrl,\n        this.config.safariWebsitePushID,\n        payload,\n        (obj: TSafariPermissionObject) => resolve(obj.permission)\n      )\n    })\n  }\n\n  public async getPushToken (): Promise<WebPushToken | undefined> {\n    return this.webPushDb.getPushToken()\n  }\n\n  public async subscribe (contactInfo?: {} | ContactInfo): Promise<void> {\n    const isPermissionGranted = this.isPermissionGranted()\n    if (!isPermissionGranted) {\n      logging.Logger.error('Permission must be granted before subscribing!')\n      return\n    }\n\n    const { deviceToken } = this.getPermissionInfo()\n    if (deviceToken) {\n      logging.Logger.debug('Got device token:', deviceToken)\n\n      const storedPushToken = await this.getPushToken()\n\n      if (storedPushToken !== deviceToken) {\n        logging.Logger.debug('Registering device, linking and registering push token')\n        if (\n          await this.meClientService.storeClientDetails() &&\n          await this.meClientService.linkClientToContact(Utils.toContactInfo(contactInfo)) &&\n          await this.meClientService.registerPushToken(deviceToken)\n        ) {\n          // persist in local DB after all actions were successful\n          await this.webPushDb.setPushToken(deviceToken)\n          Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED)\n        }\n      }\n    } else {\n      await this.webPushDb.setPushToken(deviceToken)\n      Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n    }\n  }\n\n  public async unsubscribe (): Promise<void> {\n    // remove token\n    await this.meClientService.removePushToken()\n    await this.webPushDb.setPushToken(undefined)\n    Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n  }\n\n  public async isRegistered (): Promise<boolean> {\n    return Utils.isDeviceRegistered(this.webPushDb)\n  }\n\n  public async isResubscribeNeeded (): Promise<boolean> {\n    const savedWebSitePushId = await this.webPushDb.getWebsitePushId()\n    const savedWebSitePushIdExists = typeof savedWebSitePushId !== 'undefined'\n    const webSitePushIdChanged = savedWebSitePushIdExists && this.config.safariWebsitePushID !== savedWebSitePushId\n\n    await this.webPushDb.setWebsitePushId(this.config.safariWebsitePushID)\n\n    // check change permission status\n    const lastPermission = await this.webPushDb.getLastPermissionStatus()\n    const permission = this.getPermission()\n\n    if (lastPermission !== permission) {\n      await this.webPushDb.setLastPermissionStatus(permission)\n      return true\n    }\n\n    return (webSitePushIdChanged || !savedWebSitePushIdExists)\n  }\n\n  private getPermissionInfo (): TSafariPermissionObject {\n    return safari.pushNotification.permission(this.config.safariWebsitePushID)\n  }\n}\n","/* eslint-disable @typescript-eslint/no-dynamic-delete, @typescript-eslint/prefer-optional-chain,  @typescript-eslint/strict-boolean-expressions */\n/* eslint-disable @typescript-eslint/no-floating-promises */\nclass EventEmitter {\n  private readonly _events: {[key: string]: ListenerFn[]}\n\n  constructor () {\n    this._events = {}\n  }\n\n  emit (evt: string, param?: any) {\n    const events = this._events[evt] && this._events[evt].slice()\n    if (events && events.length) {\n      for (let i = 0; i < events.length; i++) {\n        events[i](param)\n      }\n    }\n  }\n\n  on (evt: string, fn: ListenerFn) {\n    if (!this._events[evt]) {\n      this._events[evt] = []\n    }\n    this._events[evt].push(fn)\n    return this\n  }\n\n  once (evt: string, fn: ListenerFn) {\n    let used = false\n    const oncefun = (param: any) => {\n      if (!used) {\n        used = true\n        this.removeListener(evt, oncefun)\n        return fn(param)\n      }\n    }\n    return this.on(evt, oncefun)\n  }\n\n  removeListener (evt: string, listener: ListenerFn) {\n    const events = this._events[evt]\n    if (events) {\n      const idx = events.indexOf(listener)\n      if (idx > -1) {\n        events.splice(idx, 1)\n      }\n      if (events.length < 1) {\n        delete this._events[evt]\n      }\n    }\n  }\n\n  /**\n   * Get the total number of registered listeners (for testing)\n   */\n  totalListenerCount (): number {\n    let sum = 0\n    Object.keys(this._events).forEach(key => {\n      sum += this._events[key].length\n    })\n    return sum\n  }\n\n  /**\n   * Get number of listeners, registered for a specific event (for testing)\n   */\n  listenerCountFor (event: string): number {\n    const listeners = this._events[event]\n    return listeners ? listeners.length : 0\n  }\n}\n\nexport default EventEmitter\n"],"sourceRoot":""}