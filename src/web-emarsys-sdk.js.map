{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/logging.ts","webpack:///./src/lib/constants.ts","webpack:///./src/lib/utils.ts","webpack:///./src/lib/storage-with-log.ts","webpack:///./src/lib/jwt.ts","webpack:///./src/lib/me-device-event-service.ts","webpack:///./src/lib/me-client-service.ts","webpack:///./src/lib/me-v3-api-request.ts","webpack:///./src/lib/me-web-push-db.ts","webpack:///./src/lib/index-db.ts","webpack:///./src/lib/local-storage.ts","webpack:///./node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/uuid/dist/esm-browser/regex.js","webpack:///./node_modules/uuid/dist/esm-browser/validate.js","webpack:///./node_modules/uuid/dist/esm-browser/stringify.js","webpack:///./node_modules/uuid/dist/esm-browser/v1.js","webpack:///./node_modules/uuid/dist/esm-browser/parse.js","webpack:///./node_modules/uuid/dist/esm-browser/v35.js","webpack:///./node_modules/uuid/dist/esm-browser/md5.js","webpack:///./node_modules/uuid/dist/esm-browser/v3.js","webpack:///./node_modules/uuid/dist/esm-browser/native.js","webpack:///./node_modules/uuid/dist/esm-browser/v4.js","webpack:///./node_modules/uuid/dist/esm-browser/sha1.js","webpack:///./node_modules/uuid/dist/esm-browser/v5.js","webpack:///./node_modules/uuid/dist/esm-browser/nil.js","webpack:///./node_modules/uuid/dist/esm-browser/version.js","webpack:///./src/web-emarsys-sdk.ts","webpack:///./src/lib/me-web-push.ts","webpack:///./src/lib/push-notification-support-info.ts","webpack:///./src/lib/navigator-info.ts","webpack:///./src/lib/browser-version-parser.ts","webpack:///./src/lib/push-service/index.ts","webpack:///./src/lib/push-service/vapid-push-service.ts","webpack:///./src/lib/push-service/safari-push-service.ts","webpack:///./src/lib/event-emitter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SdkContext","NoopLogFn","loggingFunction","context","level","data","console","Logger","trace","debug","info","warn","error","log","exportedParts","enableLogger","enabled","methods","method","SwContext","defaultClientServiceApiBaseUrl","defaultDeviceEventServiceApiBaseUrl","defaultSafariPushPackageServiceUrl","defaultApplicationVersion","loginOverloadProtectionTime","pushTitleProperty","pushLinkProperty","pushIconProperty","pushImageProperty","pushActionsProperty","applicationPassword","dbKeyDefaultNotificationTitle","dbKeyDefaultNotificationIcon","dbKeyApplicationCode","dbKeyMeClientServiceApiBaseUrl","dbKeyMeDeviceEventServiceApiBaseUrl","dbKeyServiceWorkerUrl","dbKeyServiceWorkerScope","dbKeyApplicationServerPublicKey","dbKeyWebsitePushId","dbKeyPushPackageServiceUrl","dbKeyLastPermissionStatus","dbKeyInitParams","dbKeyBrowserId","dbKeyBrowserIds","dbKeyXClientState","dbKeyContactToken","dbKeyRefreshToken","dbKeySdkVersion","dbKeyServiceWorkerVersion","dbKeyPushToken","dbKeyContactFieldId","dbKeyContactFieldValue","dbKeyPlatform","dbKeyApplicationVersion","dbKeyDeviceModel","dbKeyOsVersion","dbKeyLanguage","dbKeyTimezone","dbKeyLoggingEnabled","dbKeyLastUsedAt","lsKeyLastLoginTime","lsKeyLastLoginToken","lsKeyLastContactFieldId","meLogin","meLogout","meOpen","meCustomEvent","indexedDbName","indexedDbVersion","PERMISSION_DENIED","PERMISSION_GRANTED","PERMISSION_PROMPT","EVENT_ON_READY","EVENT_ON_SUBSCRIBE","EVENT_ON_UNSUBSCRIBE","EVENT_ON_PERMISSION_PROMPT","EVENT_ON_PERMISSION_DENIED","EVENT_ON_PERMISSION_GRANTED","EVENT_ON_SW_INIT_ERROR","EVENT_ON_PUSH_DELIVERY","EVENT_ON_PUT_NEW_MESSAGE_TO_INBOX_STORE","EVENT_ON_UPDATE_INBOX_MESSAGES","EVENT_ON_SHOW_NOTIFICATION_PERMISSION_DIALOG","EVENT_ON_HIDE_NOTIFICATION_PERMISSION_DIALOG","KEY_DEVICE_REGISTRATION_STATUS","DEVICE_REGISTRATION_STATUS_REGISTERED","DEVICE_REGISTRATION_STATUS_UNREGISTERED","base64ToBinary","base64String","base64","repeat","length","replace","atob","async","checkDevice","meWebPushDb","getClientId","exists","clientState","getClientState","decodedClientState","JWT","decode","pushTokenExists","pushToken","identified","contactField","Function","rawData","outputArray","Uint8Array","charCodeAt","undefined","payloadMessageDataProperties","id","sid","applicationCode","notificationSettings","payload","emarsysPayload","messageData","keys","map","prop","reduce","acc","contactInfo","isEmptyObject","obj","params","scope","constructor","storage","this","defaultMessage","message","clientId","getContactToken","contactToken","getRefreshToken","refreshToken","token","options","pos","header","JSON","parse","urlB64ToString","split","err","PostEventsOKStates","MEDeviceEventService","baseUrl","desRequest","storageWithLog","StorageWithLog","postEvents","eventsData","success","apiEndpoint","response","post","includes","status","statusCode","body","json","stringify","path","appCode","getAppCode","MEClientService","meClientServiceRequest","storeClientDetails","clientDetails","getClientDetails","saveClientState","linkClientToContact","anonymous","toContactRequestBodyData","responseBody","Promise","all","setContactToken","setRefreshToken","generateAccessToken","registerPushToken","put","removePushToken","delete","headers","setClientState","platform","getPlatform","applicationVersion","getApplicationVersion","deviceModel","getDeviceModel","osVersion","getOsVersion","sdkVersion","getSdkVersion","language","getLanguage","timezone","getTimezone","Error","contactFieldId","fieldId","openIdToken","contactFieldValue","fieldValue","contactFieldEncrypted","encrypted","defaultHeaders","MEV3ApiRequest","requestOrder","endpoint","headerData","requestInit","createPostRequestInit","fetch","createPutRequestInit","createDeleteRequestInit","createRequestInit","buildHeaders","cache","Headers","forEach","k","append","MEWebPushDb","indexDb","getDefaultNotificationTitle","defaultTitle","getDBValueOrDefault","CONSTANTS","getDefaultNotificationIcon","defaultImage","getClientIdForAppCode","getBrowserIdsFromDb","toUpperCase","getClientIds","browserIdsString","browserIds","addLegacyBrowserId","legacyBrowserId","setDBValue","getInitParams","getMeClientServiceApiBaseUrl","getDBValue","getMeDeviceEventServiceApiBaseUrl","getWebsitePushId","getLastPermissionStatus","then","v","getApplicationServerPublicKey","getServiceWorkerUrl","getServiceWorkerScope","getServiceWorkerVersion","getPushToken","getContactFieldId","Number","getContactFieldValue","getPushPackageServiceUrl","getLoggingEnabled","flag","toLowerCase","setTimezone","setLanguage","setOsVersion","setDeviceModel","setApplicationVersion","setPlatform","setPushPackageServiceUrl","url","setContactFieldValue","setContactFieldId","toString","setMeClientServiceApiBaseUrl","setMeDeviceEventServiceApiBaseUrl","setPushToken","setServiceWorkerVersion","version","setSdkVersion","setLastPermissionStatus","setAppCode","setClientId","setClientIdForAppCode","setClientIds","clientIds","setDefaultNotificationIcon","icon","setDefaultNotificationTitle","setServiceWorkerUrl","setServiceWorkerScope","setApplicationServerPublicKey","setInitParams","setWebsitePushId","setLoggingEnabled","setLastUsedAt","Date","toISOString","deleteLastUsedAt","deleteDBKey","clearAll","NotFoundMessage","IndexDb","openIndexDB","database","resolve","reject","request","transaction","objectStore","onsuccess","indexedDBInstance","close","onerror","e","result","event","defaultVal","indexedDB","open","target","onupgradeneeded","createObjectStore","keyPath","localStorage","getItem","setItem","removeItem","getRandomValues","rnds8","rng","crypto","uuid","test","byteToHex","push","slice","unsafeStringify","arr","offset","TypeError","_nodeId","_clockseq","_lastMSecs","_lastNSecs","buf","b","Array","node","clockseq","seedBytes","random","msecs","now","nsecs","dt","tl","tmh","parseInt","v35","hashfunc","generateUUID","namespace","_namespace","str","unescape","encodeURIComponent","bytes","stringToBytes","set","DNS","URL","getOutputLength","inputLength8","safeAdd","x","y","lsw","md5cmn","q","a","num","cnt","md5ff","md5gg","md5hh","md5ii","msg","input","output","length32","hexTab","hex","charAt","md5ToHexEncodedArray","len","olda","oldb","oldc","oldd","wordsToMd5","length8","Uint32Array","bytesToWords","randomUUID","rnds","f","z","ROTL","K","H","isArray","N","Math","ceil","M","j","pow","floor","W","T","main","global","getGlobal","predefinedCommands","WebEmarsysSdk","window","navigator","document","readyState","addEventListener","MeWebPush","ready","navigatorInfo","NavigatorInfo","pushNotificationSupportInfo","PushNotificationSupportInfo","eventEmitter","permissionPromises","canUsePromises","once","command","init","catch","registerOrHandleOnReadyCallback","registerEventCallback","registerChangePermissionCallback","customEvent","attributes","eventData","dnd","events","type","timestamp","clicks","viewedMessages","meDeviceEventService","retrySendAfterContactTokenRefresh","subscribe","pushService","getPushService","permission","isPermissionDefault","emit","setTimeout","askPermission","getPermission","isDeviceRegistered","isFullyRegistered","getLoggedInContact","unsubscribe","Cache","setRegistrationStatus","getParams","initParams","serviceWorkerScope","serviceWorkerVersion","meClientServiceApiBaseUrl","meDeviceEventServiceApiBaseUrl","contactFieldEncryped","isLoggedIn","Utils","setOpenIdAuthenticatedContact","assertOpenIdContactInfo","meClientService","login","assertContactInfo","finalContactInfo","logout","removeAllDeviceData","cleanupClientOnBackend","isSubscribed","registerClient","linkContactInfo","pushNotificationsSupported","enableLogging","setupMeClientService","clientServiceApiBaseUrl","setupMeDeviceEventService","deviceEventServiceApiBaseUrl","checkApplicationCode","checkClientId","persistPlatformInfo","persistConfig","initPushNotifications","enable","completeNavigatorInfo","getAll","browser","userAgent","browserVersion","serviceWorkerUrl","serviceWorker","determineServiceWorkerScope","serviceWorkerAppPublicKey","applicationServerPublicKey","defaultNotificationIcon","defaultNotificationTitle","safariWebsitePushID","safariPushPackageServiceUrl","Boolean","valueOf","enableMacSafariVapid","initParamsToPersist","setupPushService","initialPushServiceProcessing","canUseSafariPush","canUseServiceWorkers","vapidPushService","VapidPushService","updateServiceWorker","config","buildApnsApiRegistrationConfig","SafariPushService","isResubscribeNeeded","isRegistered","isUnregistered","onReadyHandler","cmd","on","callback","currentPromise","registerCallbackForFurtherEvents","useCache","getRegistrationStatus","updateRegistrationStatus","win","hasServiceWorker","safari","browserRules","browserNameMapping","samsung","opera","navig","getUserAgent","getBrowserName","getVersion","browserName","nAgt","rule","regex","exec","getMappedBrowserName","mapped","BrowserVersionParser","parseBrowserVersion","getTimezoneOffset","pad","abs","nr","_navigator","verOffset","getVersionOffset","appVersion","substring","trimVersion","supportedAgents","agent","checkOffset","safariVersionOffset","indexOf","webPushDb","Notification","isPermissionGranted","requestPermission","subscription","getPushSubscription","toContactInfo","registration","getServiceWorkerRegistration","pushManager","getSubscription","lastPermission","registerServiceWorker","update","cleanCache","register","isRetry","applicationServerKey","getApplicationServerKey","existingSubscription","userVisibleOnly","handleSubscriptionWithEmptyEndpoint","getPermissionInfo","application","pushNotification","deviceToken","savedWebSitePushId","savedWebSitePushIdExists","webSitePushIdChanged","_events","evt","param","fn","used","oncefun","removeListener","listener","idx","splice","totalListenerCount","sum","listenerCountFor","listeners"],"mappings":"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","file":"web-emarsys-sdk.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","export type LogFn = (...args: any) => void\n\nconst SdkContext = '[WebEmarsysSDK]'\nconst SwContext = '[WebEmarsysSW]'\n\ninterface IConsoleLogging {\n  trace: LogFn\n  debug: LogFn\n  info: LogFn\n  warn: LogFn\n  error: LogFn\n  log: LogFn\n  [key: string]: LogFn // just for being able to loop over the entries\n}\n\n// tslint:disable-next-line:no-empty\nconst NoopLogFn: LogFn = () => {}\n\nconst loggingFunction = (context: string, level: string) => {\n  return (...data: any[]) => {\n    (console as any)[level](context, ...data)\n  }\n}\n\n/**\n * Enables the Logger by setting all log function references to the respective\n * functions of the global console.\n */\nfunction enableLogger (enabled: boolean, context: string = SdkContext) {\n  const methods = ['trace', 'debug', 'info', 'warn', 'error', 'log']\n  if (enabled) {\n    for (const method of methods) {\n      Logger[method] = loggingFunction(context, method)\n    }\n  } else {\n    for (const method of methods) {\n      Logger[method] = NoopLogFn\n    }\n  }\n}\n\n/**\n * The logger which provides logging functions. By default the functions\n * are disabled which means they point to the NoopLogFn.\n */\nconst Logger: IConsoleLogging = {\n  trace: NoopLogFn,\n  debug: NoopLogFn,\n  info: NoopLogFn,\n  warn: NoopLogFn,\n  error: NoopLogFn,\n  log: NoopLogFn\n}\n\nconst exportedParts = {\n  NoopLogFn,\n  enableLogger,\n  SdkContext,\n  SwContext,\n  Logger\n}\n\nexport default exportedParts\n","export const defaultClientServiceApiBaseUrl = 'https://me-client.eservice.emarsys.net/v3'\nexport const defaultDeviceEventServiceApiBaseUrl = 'https://mobile-events.eservice.emarsys.net/v3'\nexport const defaultSafariPushPackageServiceUrl = 'https://me-client.eservice.emarsys.net'\n\nexport const defaultApplicationVersion = '0.0.0'\n\nexport const loginOverloadProtectionTime = 3600000\n\nexport const pushTitleProperty = 'title'\n\n// property names in push notification data\nexport const pushLinkProperty = 'link'\nexport const pushIconProperty = 'icon'\nexport const pushImageProperty = 'image'\nexport const pushActionsProperty = 'actions'\n\n// ingester requests password\nexport const applicationPassword = 'not-used'\n\n// indexDb keys\nexport const dbKeyDefaultNotificationTitle = 'pushDefaultNotificationTitle'\nexport const dbKeyDefaultNotificationIcon = 'pushDefaultNotificationIcon'\nexport const dbKeyApplicationCode = 'emarsysApplicationCode'\nexport const dbKeyMeClientServiceApiBaseUrl = 'meClientServiceApiBaseUrl'\nexport const dbKeyMeDeviceEventServiceApiBaseUrl = 'meDeviceEventServiceApiBaseUrl'\nexport const dbKeyServiceWorkerUrl = 'serviceWorkerUrl'\nexport const dbKeyServiceWorkerScope = 'serviceWorkerScope'\nexport const dbKeyApplicationServerPublicKey = 'applicationServerPublicKey'\nexport const dbKeyWebsitePushId = 'websitePushId'\nexport const dbKeyPushPackageServiceUrl = 'pushPackageServiceUrl'\nexport const dbKeyLastPermissionStatus = 'lastPermissionStatus'\nexport const dbKeyInitParams = 'initParams'\nexport const dbKeyBrowserId = 'browserId'\nexport const dbKeyBrowserIds = 'browserIds'\nexport const dbKeyXClientState = 'xClientState'\nexport const dbKeyContactToken = 'contactToken'\nexport const dbKeyRefreshToken = 'refreshToken'\nexport const dbKeySdkVersion = 'sdkVersion'\nexport const dbKeyServiceWorkerVersion = 'serviceWorkerVersion'\nexport const dbKeyPushToken = 'pushToken'\nexport const dbKeyContactFieldId = 'contactFieldId'\nexport const dbKeyContactFieldValue = 'contactFieldValue'\nexport const dbKeyPlatform = 'platform'\nexport const dbKeyApplicationVersion = 'applicationVersion'\nexport const dbKeyDeviceModel = 'deviceModel'\nexport const dbKeyOsVersion = 'osVersion'\nexport const dbKeyLanguage = 'language'\nexport const dbKeyTimezone = 'timezone'\nexport const dbKeyLoggingEnabled = 'loggingEnabled'\nexport const dbKeyLastUsedAt = 'lastUsedAt'\n\n// localStorage keys\nexport const lsKeyLastLoginTime = 'emarsysWebpushLastLoginTime'\nexport const lsKeyLastLoginToken = 'emarsysWebpushLastLoginToken'\nexport const lsKeyLastContactFieldId = 'emarsysWebpushLastContactFieldId'\n\n// ME endpoints\nexport const meLogin = '/users/login'\nexport const meLogout = '/users/logout'\nexport const meOpen = '/events/message_open'\nexport const meCustomEvent = '/events/'\n\n// Indexed DB\nexport const indexedDbName = 'EMARSYS_WEBPUSH_STORE'\nexport const indexedDbVersion = 1\n\n// Permissions\nexport const PERMISSION_DENIED = 'denied'\nexport const PERMISSION_GRANTED = 'granted'\nexport const PERMISSION_PROMPT = 'default'\n\n// Events\nexport const EVENT_ON_READY = 'onReady'\nexport const EVENT_ON_SUBSCRIBE = 'onSubscribe'\nexport const EVENT_ON_UNSUBSCRIBE = 'onUnsubscribe'\nexport const EVENT_ON_PERMISSION_PROMPT = 'onPermissionPrompt'\nexport const EVENT_ON_PERMISSION_DENIED = 'onPermissionDenied'\nexport const EVENT_ON_PERMISSION_GRANTED = 'onPermissionGranted'\nexport const EVENT_ON_SW_INIT_ERROR = 'onSWInitError'\nexport const EVENT_ON_PUSH_DELIVERY = 'onPushDelivery'\nexport const EVENT_ON_PUT_NEW_MESSAGE_TO_INBOX_STORE = 'onPutNewMessageToInboxStore'\nexport const EVENT_ON_UPDATE_INBOX_MESSAGES = 'onUpdateInboxMessages'\nexport const EVENT_ON_SHOW_NOTIFICATION_PERMISSION_DIALOG = 'onShowNotificationPermissionDialog'\nexport const EVENT_ON_HIDE_NOTIFICATION_PERMISSION_DIALOG = 'onHideNotificationPermissionDialog'\n\n// LocalStore\nexport const KEY_DEVICE_REGISTRATION_STATUS = 'registrationStatus'\n\n// Device registration status\nexport const DEVICE_REGISTRATION_STATUS_REGISTERED: string = 'registered'\nexport const DEVICE_REGISTRATION_STATUS_UNREGISTERED: string = 'unregistered'\n","import { MEWebPushDb } from './me-web-push-db'\nimport * as JWT from './jwt'\n\nexport type DeviceCheckResult = {\n  exists: boolean\n  pushTokenExists?: boolean\n  identified?: boolean\n}\n\nexport function getVersion () {\n  return __VERSION__\n}\n\nexport function getGlobal () {\n  /* eslint-disable */\n  return Function('return this')()\n}\n\nfunction base64ToBinary (base64String: string): string {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4)\n  const base64 = (base64String + padding)\n    .replace(/-/g, '+')\n    .replace(/_/g, '/')\n\n  return atob(base64)\n}\n\nexport function urlB64ToUint8Array (base64String: string): Uint8Array {\n  const rawData = base64ToBinary(base64String)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n\n  return outputArray\n}\n\nexport function urlB64ToString (base64String: string): string {\n  return base64ToBinary(base64String)\n}\n\nexport async function isDeviceRegistered (meWebPushDb: MEWebPushDb): Promise<boolean> {\n  const { exists, pushTokenExists } = await checkDevice(meWebPushDb)\n  const hasPushToken = pushTokenExists !== undefined ? pushTokenExists : false\n  return (exists && hasPushToken)\n}\n\n/**\n * Returns basic information about registration, push token and identified contact\n * based on the content of the client state\n */\nexport async function checkDevice (meWebPushDb: MEWebPushDb): Promise<DeviceCheckResult> {\n  const clientId = await meWebPushDb.getClientId()\n\n  if (!clientId) {\n    return { exists: false }\n  }\n\n  const clientState = await meWebPushDb.getClientState()\n  if (!clientState) {\n    return { exists: false }\n  }\n\n  const decodedClientState = JWT.decode(clientState)\n  if (!decodedClientState) {\n    return { exists: false }\n  }\n\n  const pushToken = decodedClientState.pushToken || null\n  const contactField = decodedClientState.contactField || null\n  return {\n    exists: true,\n    pushTokenExists: pushToken !== null,\n    identified: contactField !== null\n  }\n}\n\nexport const payloadMessageDataProperties: {[index: string]: string} = {\n  id: 'string',\n  sid: 'string',\n  applicationCode: 'string',\n  notificationSettings: 'object'\n}\n\n/**\n * Check if the WebPush Message payload is produced by Emarsys.\n * @param payload\n * @returns true if it is an Emarsys Payload\n */\nexport function isValidPayload (payload: any): boolean {\n  if (typeof payload !== 'object') return false\n  const emarsysPayload = payload.messageData\n  if (!emarsysPayload) return false\n  const isValidProperty = (prop: string) => {\n    return emarsysPayload[prop]\n      ? (typeof emarsysPayload[prop]) === payloadMessageDataProperties[prop]\n      : false\n  }\n  const result = Object.keys(payloadMessageDataProperties)\n    .map(isValidProperty)\n    .reduce((acc, r) => acc && r, true)\n  return result\n}\n\n/**\n * Checks the passed data and returns either the ContactInfo or undefined if the data does not fit\n * @param contactInfo The data which shall be converted\n */\nexport function toContactInfo (contactInfo?: {} | ContactInfo | undefined): ContactInfo | undefined {\n  if (contactInfo === undefined || Object.keys(contactInfo).length !== 3) {\n    return undefined\n  }\n  return contactInfo as ContactInfo\n}\n\nexport const isEmptyObject = (obj: any) => {\n  if (obj === null) return true\n  /* eslint-disable */\n  if (obj === undefined) return true\n  for (const property in obj) {\n    return false\n  }\n  return true\n}\n\nexport function determineServiceWorkerScope (params?: ServiceWorkerParams): string | undefined {\n  if (params) {\n    return params.scope\n  } else {\n    return undefined\n  }\n}\n","import logging from './logging'\nimport { MEWebPushDb } from './me-web-push-db'\nconst { Logger } = logging\n\ntype Params = {\n  level?: string\n  message?: string\n}\n\nexport class StorageWithLog {\n  private readonly storage: MEWebPushDb\n\n  constructor (storage: MEWebPushDb) {\n    this.storage = storage\n  }\n\n  private log (value: string | undefined, defaultMessage: string, params?: Params) {\n    const { level = 'error', message = defaultMessage } = params ?? {}\n    if (!value) Logger[level](message)\n    return value\n  }\n\n  async getClientId (params?: Params): Promise<string | undefined> {\n    const defaultMessage = 'Error: No client ID set for the browser!'\n    const clientId = await this.storage.getClientId()\n    return this.log(clientId, defaultMessage, params)\n  }\n\n  async getContactToken (params?: Params): Promise<string | undefined> {\n    const defaultMessage = 'Error: No contact token set!'\n    const contactToken = await this.storage.getContactToken()\n    return this.log(contactToken, defaultMessage, params)\n  }\n\n  async getClientState (params?: Params): Promise<string | undefined> {\n    const defaultMessage = 'Error: No client state set!'\n    const clientState = await this.storage.getClientState()\n    return this.log(clientState, defaultMessage, params)\n  }\n\n  async getRefreshToken (params?: Params): Promise<string | undefined> {\n    const defaultMessage = 'Unable to refresh contact token a refresh-token is missing!'\n    const refreshToken = await this.storage.getRefreshToken()\n    return this.log(refreshToken, defaultMessage, params)\n  }\n}\n","import { urlB64ToString } from './utils'\nimport logging from './logging'\n\nexport type DecodeOptions = {\n  header?: boolean\n}\n\nexport type DecodedToken = { [key: string]: any }\n\nexport function decode (token: string, options?: DecodeOptions): DecodedToken | null {\n  const opts = options ?? {}\n  const pos = opts.header === true ? 0 : 1\n  try {\n    return JSON.parse(urlB64ToString(token.split('.')[pos]))\n  } catch (err) {\n    logging.Logger.error('Error decoding token', err)\n    return null\n  }\n}\n","import logging from './logging'\nimport { MEV3ApiRequest } from './me-v3-api-request'\nimport { MEWebPushDb } from './me-web-push-db'\nimport { StorageWithLog } from './storage-with-log'\n\nconst { Logger } = logging\n\ntype MEEventType = 'internal' | 'custom' | 'other'\n\nexport type WebPushTreatments = {\n  ac?: { id: number, run_id: string }\n  rti?: { id: string, run_id: string }\n  ui?: { id: number, run_id: string }\n  ui_test?: { id: number, run_id: string }\n}\n\nexport type MEEventAttributes = Record<string, string>\n\nexport type MEEvent = {\n  type: MEEventType\n  name: string\n  timestamp: string\n  attributes?: MEEventAttributes\n}\n\n/**\n * The data we send\n */\nexport type MEEventsRequestData = {\n  dnd?: boolean\n  events: MEEvent[]\n  viewedMessages: any[]\n  clicks: any[]\n}\n\nexport type ClientDetails = {\n  platform: string\n  applicationVersion?: string\n  deviceModel?: string\n  osVersion?: string\n  sdkVersion?: string\n  language?: string\n  timezone?: string\n}\n\nexport type PostEventsResult = { success: boolean, statusCode?: number }\n\nconst PostEventsOKStates = [200, 204]\n\nexport class MEDeviceEventService {\n  private storage: MEWebPushDb\n  private readonly storageWithLog: StorageWithLog\n  private readonly baseUrl: string\n  private desRequest: MEV3ApiRequest\n\n  constructor (\n    baseUrl: string,\n    desRequest: MEV3ApiRequest,\n    storage: MEWebPushDb\n  ) {\n    this.storage = storage\n    this.storageWithLog = new StorageWithLog(storage)\n    this.baseUrl = `${baseUrl}/apps`\n    this.desRequest = desRequest\n  }\n\n  /**\n   * Post the passed data which includes 1 or more events to the device event service\n   * @param eventsData The events which shall be forwarded to the DES.\n   * @returns A promise which resolves to a PostEventsResult which indicates the success\n   *          of the operation and contains the returned status code.\n   */\n  async postEvents (eventsData: MEEventsRequestData): Promise<PostEventsResult> {\n    const clientId = await this.storageWithLog.getClientId()\n    const contactToken = await this.storageWithLog.getContactToken()\n    const clientState = await this.storageWithLog.getClientState()\n    if (!clientId || !contactToken || !clientState) {\n      return { success: false }\n    }\n    const apiEndpoint = await this.apiEndpoint('client/events')\n    const response = await this.desRequest.post(apiEndpoint, eventsData, { clientId, clientState, contactToken })\n    if (PostEventsOKStates.includes(response.status)) {\n      return { success: true, statusCode: response.status }\n    } else {\n      const body = await response.json()\n      Logger.warn('Error posting events to device event service', response.status, JSON.stringify(body))\n      return { success: false, statusCode: response.status }\n    }\n  }\n\n  private async apiEndpoint (path: string): Promise<string> {\n    const appCode = await this.storage.getAppCode()\n    return `${this.baseUrl}/${appCode!}/${path}`\n  }\n\n  static create (\n    baseUrl: string,\n    desRequest: MEV3ApiRequest,\n    storage: MEWebPushDb\n  ) {\n    return new MEDeviceEventService(baseUrl, desRequest, storage)\n  }\n}\n","import logging from './logging'\nimport { MEV3ApiRequest } from './me-v3-api-request'\nimport { MEWebPushDb } from './me-web-push-db'\nimport { StorageWithLog } from './storage-with-log'\n\nconst { Logger } = logging\n\ntype ContactRequestBodyData = {\n  anonymous: boolean\n  body: { contactFieldId: number, contactFieldValue: string, contactFieldEncrypted: boolean } |\n  { contactFieldId: number, openIdToken: string } | {}\n}\n\nexport type ClientDetails = {\n  platform: string\n  applicationVersion?: string\n  deviceModel?: string\n  osVersion?: string\n  sdkVersion?: string\n  language?: string\n  timezone?: string\n}\n\nexport class MEClientService {\n  private readonly storage: MEWebPushDb\n  private readonly storageWithLog: StorageWithLog\n  private readonly baseUrl: string\n  private meClientServiceRequest: MEV3ApiRequest\n\n  constructor (\n    baseUrl: string,\n    meClientServiceRequest: MEV3ApiRequest,\n    storage: MEWebPushDb\n  ) {\n    this.storage = storage\n    this.storageWithLog = new StorageWithLog(storage)\n    this.baseUrl = `${baseUrl}/domains`\n    this.meClientServiceRequest = meClientServiceRequest\n  }\n\n  /**\n   * Create or update the information which is related to a specific browser\n   */\n  async storeClientDetails (): Promise<boolean> {\n    const clientId = await this.storageWithLog.getClientId()\n    if (!clientId) {\n      return false\n    }\n    const apiEndpoint = await this.apiEndpoint('client')\n    const clientState = await this.storage.getClientState()\n    const clientDetails = await this.getClientDetails()\n    const response = await this.meClientServiceRequest.post(apiEndpoint, clientDetails, { clientId, clientState })\n    if (response.status === 204) {\n      await this.saveClientState(response)\n      return true\n    } else {\n      const body = await response.json()\n      Logger.error('Error storing client info', response.status, JSON.stringify(body))\n      return false\n    }\n  }\n\n  async linkClientToContact (contactInfo?: ContactInfo | OpenIdContactInfo): Promise<boolean> {\n    const clientId = await this.storageWithLog.getClientId()\n    const clientState = await this.storageWithLog.getClientState({ level: 'info' })\n    if (!clientId || !clientState) {\n      return false\n    }\n    const { anonymous, body } = this.toContactRequestBodyData(contactInfo)\n    const apiEndpoint = `${await this.apiEndpoint('client/contact')}${anonymous ? '?anonymous=true' : ''}`\n    const response = await this.meClientServiceRequest.post(apiEndpoint, body, { clientId, clientState })\n    if (response.status === 200) {\n      await this.saveClientState(response)\n      const responseBody = await response.json()\n      if (responseBody.contactToken && responseBody.refreshToken) {\n        await Promise.all([\n          this.storage.setContactToken(responseBody.contactToken),\n          this.storage.setRefreshToken(responseBody.refreshToken)\n        ])\n        return true\n      } else {\n        Logger.error('At least one of the expected response parts missing!')\n        return false\n      }\n    } else {\n      const body = await response.json()\n      Logger.error('Error linking contact to client', response.status, JSON.stringify(body))\n      return false\n    }\n  }\n\n  async generateAccessToken (): Promise<boolean> {\n    const clientId = await this.storageWithLog.getClientId()\n    const refreshToken = await this.storageWithLog.getRefreshToken()\n    const clientState = await this.storageWithLog.getClientState()\n    if (!clientId || !refreshToken || !clientState) {\n      return false\n    }\n    const apiEndpoint = await this.apiEndpoint('client/contact-token')\n    const body = { refreshToken }\n    const response = await this.meClientServiceRequest.post(apiEndpoint, body, { clientId, clientState })\n    if (response.status === 200) {\n      const responseBody = await response.json()\n      if (responseBody.contactToken) {\n        await this.storage.setContactToken(responseBody.contactToken)\n        return true\n      } else {\n        Logger.error('ContactToken is not part of response body!')\n        return false\n      }\n    } else {\n      const body = await response.json()\n      Logger.log('Error refreshing the contact token', response.status, JSON.stringify(body))\n      return false\n    }\n  }\n\n  async registerPushToken (pushToken: string): Promise<boolean> {\n    const clientId = await this.storageWithLog.getClientId()\n    const clientState = await this.storageWithLog.getClientState()\n    const contactToken = await this.storageWithLog.getContactToken({ message: 'Unable to register subscription as contactToken is missing!' })\n    if (!clientId || !clientState || !contactToken) {\n      return false\n    }\n\n    const apiEndpoint = await this.apiEndpoint('client/push-token')\n    const body = { pushToken }\n    const response = await this.meClientServiceRequest.put(apiEndpoint, body, { clientId, clientState, contactToken })\n    if (response.status === 204) {\n      await this.saveClientState(response)\n      return true\n    } else {\n      const body = await response.json()\n      Logger.error('Error registering the subscription', response.status, JSON.stringify(body))\n      return false\n    }\n  }\n\n  async removePushToken (): Promise<boolean> {\n    Logger.info('Remove push token')\n    const clientId = await this.storageWithLog.getClientId()\n    const clientState = await this.storageWithLog.getClientState({ level: 'info' })\n    const contactToken = await this.storageWithLog.getContactToken({ level: 'info' })\n    if (!clientId || !clientState || !contactToken) {\n      return false\n    }\n    const apiEndpoint = await this.apiEndpoint('client/push-token')\n    const response = await this.meClientServiceRequest.delete(apiEndpoint, {}, { clientId, clientState, contactToken })\n    if (response.status === 204) {\n      await this.saveClientState(response)\n      return true\n    } else {\n      const body = await response.json()\n      Logger.error('Error removing a subscription', response.status, JSON.stringify(body))\n      return true\n    }\n  }\n\n  private async apiEndpoint (path: string): Promise<string> {\n    const appCode = await this.storage.getAppCode()\n    return `${this.baseUrl}/${appCode!}/${path}`\n  }\n\n  private async saveClientState (response: Response) {\n    const clientState = response.headers.get('x-client-state')\n    if (clientState) {\n      await this.storage.setClientState(clientState)\n    } else {\n      Logger.error('Error: X-Client-State not found in response header!')\n    }\n  }\n\n  private async getClientDetails (): Promise<ClientDetails> {\n    const platform = await this.storage.getPlatform()\n    if (platform) {\n      const applicationVersion = await this.storage.getApplicationVersion()\n      const deviceModel = await this.storage.getDeviceModel()\n      const osVersion = await this.storage.getOsVersion()\n      const sdkVersion = await this.storage.getSdkVersion()\n      const language = await this.storage.getLanguage()\n      const timezone = await this.storage.getTimezone()\n      return {\n        platform,\n        applicationVersion,\n        deviceModel,\n        osVersion,\n        sdkVersion,\n        language,\n        timezone\n      }\n    } else {\n      throw new Error('platform not found in storage!')\n    }\n  }\n\n  private toContactRequestBodyData (contactInfo?: ContactInfo | OpenIdContactInfo): ContactRequestBodyData {\n    if (!contactInfo) {\n      return {\n        body: {},\n        anonymous: true\n      }\n    }\n\n    if ('openIdToken' in contactInfo) {\n      return {\n        body: {\n          contactFieldId: contactInfo.fieldId,\n          openIdToken: contactInfo.openIdToken\n        },\n        anonymous: false\n      }\n    }\n\n    return {\n      body: {\n        contactFieldId: contactInfo.fieldId,\n        contactFieldValue: contactInfo.fieldValue,\n        contactFieldEncrypted: contactInfo.encrypted\n      },\n      anonymous: false\n    }\n  }\n\n  static create (\n    baseUrl: string,\n    meClientServiceRequest: MEV3ApiRequest,\n    storage: MEWebPushDb\n  ) {\n    return new MEClientService(baseUrl, meClientServiceRequest, storage)\n  }\n}\n","const defaultHeaders: { [key: string]: string } = {\n  'Content-Type': 'application/json'\n}\n\nexport type HeaderData = {\n  clientId: string\n  clientState?: string\n  contactToken?: string\n}\n\nexport class MEV3ApiRequest {\n  private requestOrder: number\n\n  constructor () {\n    this.requestOrder = 0\n  }\n\n  async post (endpoint: string, body: object, headerData: HeaderData): Promise<Response> {\n    const requestInit: RequestInit = this.createPostRequestInit(body, headerData)\n    return fetch(endpoint, requestInit)\n  }\n\n  async put (endpoint: string, body: object, headerData: HeaderData): Promise<Response> {\n    const requestInit: RequestInit = this.createPutRequestInit(body, headerData)\n    return fetch(endpoint, requestInit)\n  }\n\n  async delete (endpoint: string, body: object, headerData: HeaderData): Promise<Response> {\n    const requestInit: RequestInit = this.createDeleteRequestInit(body, headerData)\n    return fetch(endpoint, requestInit)\n  }\n\n  private createPostRequestInit (body: object, headerData: HeaderData): RequestInit {\n    return this.createRequestInit('POST', body, headerData)\n  }\n\n  private createPutRequestInit (body: object, headerData: HeaderData): RequestInit {\n    return this.createRequestInit('PUT', body, headerData)\n  }\n\n  private createDeleteRequestInit (body: object, headerData: HeaderData): RequestInit {\n    return this.createRequestInit('DELETE', body, headerData)\n  }\n\n  private createRequestInit (method: string, body: object, headerData: HeaderData): RequestInit {\n    return {\n      method,\n      headers: this.buildHeaders(headerData),\n      mode: 'cors',\n      cache: 'default',\n      body: JSON.stringify(body)\n    }\n  }\n\n  private buildHeaders (headerData: HeaderData) {\n    const headers: Headers = new Headers()\n\n    Object.keys(defaultHeaders).forEach(k => {\n      headers.append(k, defaultHeaders[k])\n    })\n\n    headers.append('x-client-id', headerData.clientId)\n\n    if (headerData.clientState) {\n      headers.append('x-client-state', headerData.clientState)\n    }\n\n    if (headerData.contactToken) {\n      headers.append('x-contact-token', headerData.contactToken)\n    }\n\n    headers.append('x-request-order', `${this.requestOrder}`)\n    this.requestOrder += 1\n\n    return headers\n  }\n\n  static create (): MEV3ApiRequest {\n    return new MEV3ApiRequest()\n  }\n}\n","import * as CONSTANTS from './constants'\nimport { IndexDb } from './index-db'\n\n/**\n * The ME web push persisted information\n */\nexport class MEWebPushDb {\n  private readonly indexDb: IndexDb\n  private appCode: string | undefined\n\n  constructor (indexDb: IndexDb) {\n    this.indexDb = indexDb\n  }\n\n  async getDefaultNotificationTitle (defaultTitle: string): Promise<string> {\n    return (this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyDefaultNotificationTitle, defaultTitle) as Promise<string>)\n  }\n\n  async getDefaultNotificationIcon (defaultImage: string | undefined): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyDefaultNotificationIcon, defaultImage)\n  }\n\n  async getClientIdForAppCode (appCode: string | undefined): Promise<string | undefined> {\n    if (appCode !== undefined) {\n      const browserIds: ClientIdList = await this.getBrowserIdsFromDb()\n      return browserIds[appCode.toUpperCase()]\n    }\n  }\n\n  async getClientIds (): Promise<ClientIdList | undefined> {\n    return this.getBrowserIdsFromDb()\n  }\n\n  private async getBrowserIdsFromDb (): Promise<ClientIdList> {\n    const browserIdsString: string | undefined = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyBrowserIds)\n    let browserIds: { [appCode: string]: string } = {}\n    if (browserIdsString !== undefined) {\n      // tslint:disable-next-line:no-empty\n      try { browserIds = JSON.parse(browserIdsString) } catch (err) { }\n    }\n    browserIds = await this.addLegacyBrowserId(browserIds)\n    return browserIds\n  }\n\n  private async addLegacyBrowserId (browserIds: ClientIdList): Promise<ClientIdList> {\n    const legacyBrowserId = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyBrowserId)\n    if (legacyBrowserId !== undefined) {\n      const parts = legacyBrowserId.split('_')\n      browserIds[parts[0].toUpperCase()] = legacyBrowserId\n      await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserIds, JSON.stringify(browserIds))\n      await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserId, undefined)\n    }\n    return browserIds\n  }\n\n  async getInitParams (): Promise<IInitParams | undefined> {\n    const params = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyInitParams)\n    return params ? JSON.parse(params) : undefined\n  }\n\n  async getMeClientServiceApiBaseUrl (): Promise<string> {\n    return this.indexDb.getDBValue(CONSTANTS.dbKeyMeClientServiceApiBaseUrl)\n  }\n\n  async getMeDeviceEventServiceApiBaseUrl (): Promise<string> {\n    return this.indexDb.getDBValue(CONSTANTS.dbKeyMeDeviceEventServiceApiBaseUrl)\n  }\n\n  async getClientId (): Promise<string | undefined> {\n    const appCode = await this.getAppCode()\n    return this.getClientIdForAppCode(appCode)\n  }\n\n  async getClientState (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyXClientState)\n  }\n\n  async getRefreshToken (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyRefreshToken)\n  }\n\n  async getContactToken (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyContactToken)\n  }\n\n  async getAppCode (): Promise<string | undefined> {\n    if (!this.appCode) {\n      this.appCode = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyApplicationCode)\n    }\n    return this.appCode\n  }\n\n  async getWebsitePushId (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyWebsitePushId)\n  }\n\n  async getLastPermissionStatus (): Promise<NotificationPermission | undefined> {\n    return this.indexDb\n      .getDBValueOrDefault(CONSTANTS.dbKeyLastPermissionStatus)\n      .then(v => v as NotificationPermission)\n  }\n\n  async getApplicationServerPublicKey (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyApplicationServerPublicKey)\n  }\n\n  async getServiceWorkerUrl (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyServiceWorkerUrl)\n  }\n\n  async getServiceWorkerScope (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyServiceWorkerScope)\n  }\n\n  async getSdkVersion (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeySdkVersion)\n  }\n\n  async getServiceWorkerVersion (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyServiceWorkerVersion)\n  }\n\n  async getPushToken (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyPushToken)\n  }\n\n  async getContactFieldId (): Promise<number | undefined> {\n    const fieldId = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyContactFieldId)\n    return fieldId ? Number(fieldId) : undefined\n  }\n\n  async getContactFieldValue (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyContactFieldValue)\n  }\n\n  async getPushPackageServiceUrl (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyPushPackageServiceUrl)\n  }\n\n  async getPlatform (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyPlatform)\n  }\n\n  async getApplicationVersion (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyApplicationVersion)\n  }\n\n  async getDeviceModel (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyDeviceModel)\n  }\n\n  async getOsVersion (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyOsVersion)\n  }\n\n  async getLanguage (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyLanguage)\n  }\n\n  async getTimezone (): Promise<string | undefined> {\n    return this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyTimezone)\n  }\n\n  async getLoggingEnabled (): Promise<boolean> {\n    const flag = await this.indexDb.getDBValueOrDefault(CONSTANTS.dbKeyLoggingEnabled)\n    return flag?.toLowerCase() === 'true'\n  }\n\n  async setTimezone (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyTimezone, value)\n  }\n\n  async setLanguage (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyLanguage, value)\n  }\n\n  async setOsVersion (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyOsVersion, value)\n  }\n\n  async setDeviceModel (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyDeviceModel, value)\n  }\n\n  async setApplicationVersion (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyApplicationVersion, value)\n  }\n\n  async setPlatform (value: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyPlatform, value)\n  }\n\n  async setPushPackageServiceUrl (url: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyPushPackageServiceUrl, url)\n  }\n\n  async setContactFieldValue (fieldValue: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyContactFieldValue, fieldValue)\n  }\n\n  async setContactFieldId (fieldId: number | undefined): Promise<void> {\n    await this.indexDb.setDBValue(\n      CONSTANTS.dbKeyContactFieldId,\n      typeof fieldId === 'number' ? fieldId.toString() : undefined\n    )\n  }\n\n  async setMeClientServiceApiBaseUrl (url: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyMeClientServiceApiBaseUrl, url)\n  }\n\n  async setMeDeviceEventServiceApiBaseUrl (url: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyMeDeviceEventServiceApiBaseUrl, url)\n  }\n\n  async setPushToken (pushToken: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyPushToken, pushToken)\n  }\n\n  async setServiceWorkerVersion (version: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyServiceWorkerVersion, version)\n  }\n\n  async setSdkVersion (sdkVersion: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeySdkVersion, sdkVersion)\n  }\n\n  async setLastPermissionStatus (status: NotificationPermission | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyLastPermissionStatus, status)\n  }\n\n  async setAppCode (appCode: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyApplicationCode, appCode)\n    this.appCode = appCode\n  }\n\n  async setClientState (clientState: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyXClientState, clientState)\n  }\n\n  async setContactToken (contactToken: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyContactToken, contactToken)\n  }\n\n  async setRefreshToken (refreshToken: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyRefreshToken, refreshToken)\n  }\n\n  private async setClientId (clientId: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserId, clientId)\n  }\n\n  async setClientIdForAppCode (clientId: string | undefined, appCode: string): Promise<void> {\n    const browserIds = await this.getBrowserIdsFromDb()\n    if (clientId !== undefined) {\n      browserIds[appCode.toUpperCase()] = clientId\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete browserIds[appCode.toUpperCase()]\n    }\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserIds, JSON.stringify(browserIds))\n  }\n\n  async setClientIds (clientIds: ClientIdList | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyBrowserIds, JSON.stringify(clientIds))\n  }\n\n  async setDefaultNotificationIcon (icon: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyDefaultNotificationIcon, icon)\n  }\n\n  async setDefaultNotificationTitle (icon: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyDefaultNotificationTitle, icon)\n  }\n\n  async setServiceWorkerUrl (url: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyServiceWorkerUrl, url)\n  }\n\n  async setServiceWorkerScope (scope: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyServiceWorkerScope, scope)\n  }\n\n  async setApplicationServerPublicKey (key: string | undefined): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyApplicationServerPublicKey, key)\n  }\n\n  async setInitParams (params: IInitParams | undefined) {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyInitParams, JSON.stringify(params))\n  }\n\n  async setWebsitePushId (id: string | undefined) {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyWebsitePushId, id)\n  }\n\n  async setLoggingEnabled (flag: boolean): Promise<void> {\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyLoggingEnabled, `${flag}`)\n  }\n\n  async setLastUsedAt (): Promise<void> {\n    const d = new Date().toISOString()\n    await this.indexDb.setDBValue(CONSTANTS.dbKeyLastUsedAt, d)\n  }\n\n  async deleteLastUsedAt (): Promise<void> {\n    await this.indexDb.deleteDBKey(CONSTANTS.dbKeyLastUsedAt)\n  }\n\n  async clearAll (): Promise<void> {\n    await Promise.all([\n      this.setAppCode(undefined),\n      this.setClientState(undefined),\n      this.setContactToken(undefined),\n      this.setRefreshToken(undefined),\n      this.setDefaultNotificationIcon(undefined),\n      this.setDefaultNotificationTitle(undefined),\n      this.setServiceWorkerUrl(undefined),\n      this.setServiceWorkerScope(undefined),\n      this.setApplicationServerPublicKey(undefined),\n      this.setSdkVersion(undefined),\n      this.setServiceWorkerVersion(undefined),\n      this.setInitParams(undefined),\n      this.setWebsitePushId(undefined),\n      this.setPushPackageServiceUrl(undefined),\n      this.setLastPermissionStatus(undefined),\n      this.setPushToken(undefined),\n      this.setContactFieldId(undefined),\n      this.setContactFieldValue(undefined),\n      this.setPlatform(undefined),\n      this.setApplicationVersion(undefined),\n      this.setDeviceModel(undefined),\n      this.setTimezone(undefined),\n      this.setLanguage(undefined),\n      this.setOsVersion(undefined),\n      this.setMeClientServiceApiBaseUrl(undefined),\n      this.setMeDeviceEventServiceApiBaseUrl(undefined),\n      this.deleteLastUsedAt()\n    ])\n    this.appCode = undefined // clear the cache\n  }\n\n  static create (indexDb: IndexDb): MEWebPushDb {\n    return new MEWebPushDb(indexDb)\n  }\n}\n","import { indexedDbName, indexedDbVersion } from './constants'\n\nconst NotFoundMessage = 'not_found'\n\n/**\n * IndexedDb class handles browser's indexdb database operations\n */\nexport class IndexDb {\n  private name: string\n  private indexedDBInstance: IDBDatabase | undefined\n\n  constructor () {\n    this.name = 'keyValue'\n  }\n\n  /**\n   * Saves a value to browser's indexDb with a given key\n   */\n  async setDBValue (key: string, value: string | undefined): Promise<string> {\n    return this.openIndexDB().then((database: IDBDatabase) => {\n      return new Promise((resolve, reject) => {\n        const request = database\n          .transaction([this.name], 'readwrite')\n          .objectStore(this.name)\n          .put({ key, value })\n\n        request.onsuccess = () => {\n          this.indexedDBInstance = undefined\n          database.close()\n          return resolve(key)\n        }\n\n        request.onerror = (e) => {\n          this.indexedDBInstance = undefined\n          database.close()\n          return reject(e)\n        }\n      })\n    })\n  }\n\n  /**\n   * Saves a value to browser's indexDb with a given key\n   */\n  async deleteDBKey (key: IDBValidKey): Promise<boolean> {\n    return this.openIndexDB().then((database: IDBDatabase) => {\n      return new Promise((resolve, reject) => {\n        const request = database\n          .transaction([this.name], 'readwrite')\n          .objectStore(this.name)\n          .delete(key)\n\n        request.onsuccess = () => {\n          this.indexedDBInstance = undefined\n          database.close()\n          return resolve(true)\n        }\n\n        request.onerror = (e) => {\n          this.indexedDBInstance = undefined\n          database.close()\n          return reject(e)\n        }\n      })\n    })\n  }\n\n  /**\n   * Read a value from browser's indexDb\n   */\n  async getDBValue (key: string): Promise<string> {\n    const database: IDBDatabase = await this.openIndexDB()\n    return new Promise((resolve, reject) => {\n      const request = database\n        .transaction(this.name)\n        .objectStore(this.name)\n        .get(key)\n\n      request.onsuccess = () => {\n        const { result } = request\n        if (result) {\n          this.indexedDBInstance = undefined\n          database.close()\n          return resolve(result.value)\n        } else {\n          this.indexedDBInstance = undefined\n          database.close()\n          return reject(new Error(NotFoundMessage))\n        }\n      }\n\n      request.onerror = (event: Event) => {\n        this.indexedDBInstance = undefined\n        database.close()\n        return reject(event)\n      }\n    })\n  }\n\n  /**\n   * Read a value from browser's indexDb with fallback\n   */\n  async getDBValueOrDefault (key: string, defaultVal: string | undefined = undefined): Promise<string | undefined> {\n    try {\n      const result = await this.getDBValue(key)\n      return result\n    } catch (err) {\n      if (err.message === NotFoundMessage) {\n        return defaultVal\n      } else {\n        throw err\n      }\n    }\n  }\n\n  /**\n   * Opens browser's IndexDB database.\n   * If the database has opened already it doesn't reopen it but returns with the opened one.\n   */\n  private async openIndexDB (): Promise<IDBDatabase> {\n    return new Promise((resolve, reject) => {\n      if (this.indexedDBInstance) {\n        return resolve(this.indexedDBInstance)\n      }\n      const request = indexedDB.open(indexedDbName, indexedDbVersion)\n\n      request.onsuccess = (event: Event) => {\n        this.indexedDBInstance = (event.target! as any).result\n        return resolve(this.indexedDBInstance)\n      }\n\n      request.onerror = (event: Event) => {\n        return reject(event)\n      }\n\n      request.onupgradeneeded = (event: Event) => {\n        const database = (event.target! as any).result\n        database.createObjectStore('keyValue', {\n          keyPath: 'key'\n        })\n      }\n    })\n  }\n\n  static create (): IndexDb {\n    return new IndexDb()\n  }\n}\n","import * as CONSTANTS from './constants'\n\nexport function getRegistrationStatus (): string | undefined {\n  const status: string | null = localStorage.getItem(CONSTANTS.KEY_DEVICE_REGISTRATION_STATUS)\n  if (status) {\n    return status\n  } else {\n    return undefined\n  }\n}\n\nexport function setRegistrationStatus (status: string): void {\n  localStorage.setItem(CONSTANTS.KEY_DEVICE_REGISTRATION_STATUS, status)\n}\n\nexport function removeRegistrationStatus (): void {\n  localStorage.removeItem(CONSTANTS.KEY_DEVICE_REGISTRATION_STATUS)\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;","import MeWebPushSdkSingleton from './lib/me-web-push'\nimport { getGlobal } from './lib/utils'\n\nfunction main () {\n  console.log('my sdk B!')\n\n  const global = getGlobal()\n\n  let { WebEmarsysSdk } = global\n  let predefinedCommands\n\n  if (WebEmarsysSdk) {\n    predefinedCommands = WebEmarsysSdk\n  }\n\n  WebEmarsysSdk = MeWebPushSdkSingleton.create(window, navigator)\n  if (Array.isArray(predefinedCommands)) {\n    predefinedCommands.forEach(c => WebEmarsysSdk.push(c))\n  }\n\n  global.WebEmarsysSdk = WebEmarsysSdk\n}\n\nif (document.readyState === 'complete') {\n  main()\n} else {\n  window.addEventListener('load', main)\n}\n","import * as CONSTANTS from './constants'\nimport logging from './logging'\nimport { MEClientService } from './me-client-service'\nimport {\n  MEDeviceEventService,\n  MEEventsRequestData,\n  MEEventAttributes,\n  MEEvent,\n  PostEventsResult\n} from './me-device-event-service'\nimport { PushNotificationSupportInfo } from './push-notification-support-info'\nimport { NavigatorInfo } from './navigator-info'\nimport { MEWebPushDb } from './me-web-push-db'\nimport { IndexDb } from './index-db'\nimport { MEV3ApiRequest } from './me-v3-api-request'\nimport { SafariPushService, VapidPushService } from './push-service'\n\nimport { v4 as uuidv4 } from 'uuid'\nimport { IPushService } from './push-service/push-service.types'\nimport EventEmitter from './event-emitter'\nimport * as Cache from './local-storage'\nimport * as JWT from './jwt'\nimport * as Utils from './utils'\nimport { StorageWithLog } from './storage-with-log'\n\nconst { Logger, enableLogger } = logging\n\ntype ChainFunction = (param: any) => Promise<any> | any\n\n/**\n * EmarsysWebPush class is responsible for subscription for notifications.\n * This is the entry point what have to be called from site's index page.\n */\nexport default class MeWebPush {\n  private readonly navigator: Navigator\n  private readonly window: Window\n  private meClientService?: MEClientService\n  private meDeviceEventService?: MEDeviceEventService\n  private readonly pushNotificationSupportInfo: PushNotificationSupportInfo\n  private readonly navigatorInfo: NavigatorInfo\n  private readonly meWebPushDb: MEWebPushDb\n  private readonly storageWithLog: StorageWithLog\n  private readonly eventEmitter: EventEmitter\n  private readonly permissionPromises: { [key: string]: Promise<ChainFunction> }\n  private pushService?: IPushService\n  private ready: boolean = false\n\n  constructor (window: Window, navigator: Navigator) {\n    this.navigator = navigator\n    this.window = window\n    this.navigatorInfo = NavigatorInfo.create(navigator)\n    this.pushNotificationSupportInfo = PushNotificationSupportInfo.create(this.navigatorInfo, window)\n    this.meWebPushDb = MEWebPushDb.create(IndexDb.create())\n    this.storageWithLog = new StorageWithLog(this.meWebPushDb)\n    this.eventEmitter = new EventEmitter()\n    this.permissionPromises = {}\n    if (this.pushNotificationSupportInfo.canUsePromises()) {\n      this.permissionPromises = {\n        [CONSTANTS.EVENT_ON_PERMISSION_DENIED]: new Promise(\n          resolve => this.eventEmitter.once(CONSTANTS.EVENT_ON_PERMISSION_DENIED, resolve)\n        ),\n        [CONSTANTS.EVENT_ON_PERMISSION_PROMPT]: new Promise(\n          resolve => this.eventEmitter.once(CONSTANTS.EVENT_ON_PERMISSION_PROMPT, resolve)\n        ),\n        [CONSTANTS.EVENT_ON_PERMISSION_GRANTED]: new Promise(\n          resolve => this.eventEmitter.once(CONSTANTS.EVENT_ON_PERMISSION_GRANTED, resolve)\n        )\n      }\n    }\n  }\n\n  push (command: SdkCommand) {\n    if (typeof command === 'function') {\n      this.registerOrHandleOnReadyCallback(command)\n      return\n    }\n\n    if (!Array.isArray(command)) {\n      throw new Error('Invalid command!')\n    }\n\n    switch (command[0]) {\n      case 'init':\n        this\n          .init(command[1])\n          .then(() => Logger.debug('Initialized'))\n          .catch(err => Logger.error(err, 'Init failed!'))\n        break\n\n      case CONSTANTS.EVENT_ON_READY:\n        this.registerOrHandleOnReadyCallback(command[1])\n        break\n\n      case CONSTANTS.EVENT_ON_SUBSCRIBE:\n      case CONSTANTS.EVENT_ON_UNSUBSCRIBE:\n      case CONSTANTS.EVENT_ON_SW_INIT_ERROR:\n        this.registerEventCallback(command[0], command[1])\n        break\n\n      case CONSTANTS.EVENT_ON_PERMISSION_DENIED:\n      case CONSTANTS.EVENT_ON_PERMISSION_PROMPT:\n      case CONSTANTS.EVENT_ON_PERMISSION_GRANTED:\n        this.registerChangePermissionCallback(command[0], command[1])\n        break\n\n      default:\n        Logger.warn(`WARN: Command \"${JSON.stringify(command)}\" not yet implemented!`)\n    }\n  }\n\n  public async customEvent (name: string, attributes?: MEEventAttributes): Promise<boolean> {\n    try {\n      const eventData = {\n        dnd: true,\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        events: [{\n          type: 'custom',\n          name,\n          timestamp: new Date().toISOString(),\n          attributes: {\n            ...attributes,\n            'me:origin': 'webpush'\n          }\n        } as MEEvent],\n        clicks: [],\n        viewedMessages: []\n      }\n      let result: PostEventsResult = await this.meDeviceEventService!.postEvents(eventData)\n      if (!result.success && result.statusCode === 401) {\n        Logger.log('Contact token seems outdated, try to refresh and send again...')\n        result = await this.retrySendAfterContactTokenRefresh(eventData)\n      }\n      Logger.debug('Sent custom event', name, JSON.stringify(attributes), JSON.stringify(result))\n      return result.success\n    } catch (err) {\n      Logger.error('Error sending custom event', err.message, err)\n      return false\n    }\n  }\n\n  public async subscribe (): Promise<void> {\n    const pushService = this.getPushService()\n    const isPermissionDefault = pushService.isPermissionDefault()\n\n    let permission: NotificationPermission\n    if (isPermissionDefault) {\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_PROMPT)\n      setTimeout(() => {\n        if (!permission) { // if `Notification.requestPermission()` doesn't resolve\n          void this.subscribe()\n        }\n      }, 3000)\n      permission = await pushService.askPermission().catch(err => {\n        Logger.error('Safari ask permission error', err)\n        return CONSTANTS.PERMISSION_DENIED\n      })\n    } else {\n      permission = pushService.getPermission()\n    }\n    const isDeviceRegistered = await this.isFullyRegistered(false)\n\n    if (permission === CONSTANTS.PERMISSION_GRANTED) {\n      const contactInfo: {} | ContactInfo | undefined = await this.getLoggedInContact()\n      Logger.debug('User granted permission for push notifications')\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_GRANTED)\n\n      if (!isDeviceRegistered) {\n        Logger.debug('Triggering push service unsubscribe')\n        await pushService.unsubscribe()\n        Logger.debug('Triggering push service subscribe')\n      } else {\n        Logger.debug('Triggering subscribe for token update')\n      }\n\n      await pushService.subscribe(contactInfo)\n      await this.meWebPushDb.setLastUsedAt()\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_SUBSCRIBE)\n      return\n    }\n\n    if (permission === CONSTANTS.PERMISSION_DENIED) {\n      Logger.log('User has declined push permission')\n      if (isDeviceRegistered) {\n        await pushService.unsubscribe()\n      }\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_DENIED)\n    }\n  }\n\n  public async unsubscribe (): Promise<void> {\n    try {\n      Logger.debug('Unsubscribing...')\n      await this.getPushService().unsubscribe()\n      Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n      this.eventEmitter.emit(CONSTANTS.EVENT_ON_UNSUBSCRIBE)\n    } catch (err) {\n      Logger.error(err, 'Error occurred during unsubscribe')\n    }\n  }\n\n  public async getParams () {\n    const applicationCode = await this.meWebPushDb.getAppCode()\n    const clientId = await this.meWebPushDb.getClientIdForAppCode(applicationCode)\n    const initParams = await this.meWebPushDb.getInitParams()\n    const pushToken = await this.meWebPushDb.getPushToken()\n    const serviceWorkerScope = await this.meWebPushDb.getServiceWorkerScope()\n    const serviceWorkerVersion = await this.meWebPushDb.getServiceWorkerVersion()\n    const sdkVersion = await this.meWebPushDb.getSdkVersion()\n    const meClientServiceApiBaseUrl = await this.meWebPushDb.getMeClientServiceApiBaseUrl()\n    const meDeviceEventServiceApiBaseUrl = await this.meWebPushDb.getMeDeviceEventServiceApiBaseUrl()\n    const clientState = await this.meWebPushDb.getClientState()\n    const contactToken = await this.meWebPushDb.getContactToken()\n    const refreshToken = await this.meWebPushDb.getRefreshToken()\n\n    return {\n      applicationCode,\n      clientId,\n      pushToken,\n      serviceWorkerScope,\n      serviceWorkerVersion,\n      sdkVersion,\n      meClientServiceApiBaseUrl,\n      meDeviceEventServiceApiBaseUrl,\n      clientState,\n      contactToken,\n      refreshToken,\n      ...initParams\n    }\n  }\n\n  public async getLoggedInContact (): Promise<ContactInfo | {} | undefined> {\n    const clientState = await this.storageWithLog.getClientState({ level: 'info' })\n    if (!clientState) {\n      return undefined\n    }\n\n    const decodedClientState = JWT.decode(clientState)\n    if (!decodedClientState) {\n      Logger.error('Decoding failed', JSON.stringify(clientState))\n      return undefined\n    }\n    const contactField = decodedClientState.contactField\n    if (contactField === undefined) {\n      return undefined\n    }\n\n    if (contactField === null || Object.keys(contactField).length === 0) {\n      return {} // the anonymous contact!\n    }\n\n    if ((contactField.contactFieldId !== undefined) && contactField.contactFieldValue) {\n      return {\n        fieldId: contactField.contactFieldId,\n        fieldValue: contactField.contactFieldValue,\n        encrypted: (typeof contactField.contactFieldEncryped === 'boolean') ? contactField.contactFieldEncryped : false\n      }\n    } else {\n      Logger.error('contactField information incomplete', JSON.stringify(contactField))\n      return undefined\n    }\n  }\n\n  public async isLoggedIn (): Promise<boolean> {\n    const contactInfo = await this.getLoggedInContact()\n    return !(Utils.isEmptyObject(contactInfo) || contactInfo === undefined)\n  }\n\n  public async setOpenIdAuthenticatedContact (contactInfo: OpenIdContactInfo): Promise<boolean> {\n    this.assertOpenIdContactInfo(contactInfo)\n    return this.meClientService!.linkClientToContact(contactInfo)\n  }\n\n  public async login (contactInfo?: Omit<ContactInfo, 'encrypted'>): Promise<boolean> {\n    this.assertContactInfo(contactInfo)\n    const finalContactInfo = (contactInfo !== undefined) ? { ...contactInfo, encrypted: false } : contactInfo\n    return this.meClientService!.linkClientToContact(finalContactInfo)\n  }\n\n  public async logout (): Promise<boolean> {\n    return this.meClientService!.linkClientToContact()\n  }\n\n  public async removeAllDeviceData (): Promise<void> {\n    await this.cleanupClientOnBackend(this.meClientService!)\n    await this.meWebPushDb.clearAll()\n  }\n\n  public async isSubscribed (): Promise<boolean> {\n    return this.isFullyRegistered()\n  }\n\n  public async registerClient (contactInfo?: Omit<ContactInfo, 'encrypted'>): Promise<boolean> {\n    this.assertContactInfo(contactInfo)\n    const linkContactInfo = contactInfo ? { ...contactInfo, encrypted: false } : undefined\n    const result = await this.meClientService!.storeClientDetails() &&\n                   await this.meClientService!.linkClientToContact(linkContactInfo)\n    return result\n  }\n\n  public async getClientId (): Promise<string | undefined> {\n    const appCode = await this.meWebPushDb.getAppCode()\n\n    if (appCode === undefined) {\n      Logger.log('No APP code found in environment')\n      return undefined\n    }\n\n    const clientId = await this.meWebPushDb.getClientIdForAppCode(appCode)\n    if (clientId === undefined) {\n      Logger.log(`No client ID for APP code \"${appCode}\" found`)\n    }\n    return clientId\n  }\n\n  private assertContactInfo (contactInfo?: Omit<ContactInfo, 'encrypted'>) {\n    // tslint:disable-next-line\n    if (contactInfo && ((contactInfo.fieldId === undefined) || !contactInfo.fieldValue)) {\n      throw new Error(`Incomplete contact info: ${JSON.stringify(contactInfo)}`)\n    }\n  }\n\n  private assertOpenIdContactInfo (contactInfo: OpenIdContactInfo) {\n    // tslint:disable-next-line\n    if ((contactInfo.fieldId === undefined) || !contactInfo.openIdToken) {\n      throw new Error(`Incomplete contact info: ${JSON.stringify(contactInfo)}`)\n    }\n  }\n\n  /**\n   * Subscribe for push notifications and registers the subscription.\n   * This function have to be called from the site's page.\n   */\n  private async init (params: IInitParams): Promise<void> {\n    if (!this.pushNotificationSupportInfo.pushNotificationsSupported()) {\n      return Promise.reject(new Error('Web push not supported'))\n    }\n\n    this.enableLogging(params.enableLogging)\n\n    await this.setupMeClientService(params.clientServiceApiBaseUrl)\n\n    await this.setupMeDeviceEventService(params.deviceEventServiceApiBaseUrl)\n\n    const appCode = await this.checkApplicationCode(this.meClientService!, params.applicationCode)\n\n    await this.checkClientId(appCode)\n\n    await this.persistPlatformInfo(params)\n\n    await this.persistConfig(params)\n\n    // TODO: We could now report an \"app open\" with a frequency capping of 1h here...\n\n    await this.initPushNotifications(params)\n\n    // initialization is done, so any registered callback may be invoked now\n    this.eventEmitter.emit(CONSTANTS.EVENT_ON_READY)\n    this.ready = true\n  }\n\n  private enableLogging (enable?: boolean) {\n    enableLogger(enable === true)\n  }\n\n  private async setupMeClientService (baseUrl?: string): Promise<void> {\n    const meClientServiceApiBaseUrl = baseUrl ?? CONSTANTS.defaultClientServiceApiBaseUrl\n    this.meClientService = MEClientService.create(\n      meClientServiceApiBaseUrl, MEV3ApiRequest.create(), this.meWebPushDb\n    )\n    await this.meWebPushDb.setMeClientServiceApiBaseUrl(meClientServiceApiBaseUrl)\n  }\n\n  private async setupMeDeviceEventService (baseUrl?: string): Promise<void> {\n    const meDeviceEventServiceApiBaseUrl = baseUrl ?? CONSTANTS.defaultDeviceEventServiceApiBaseUrl\n    this.meDeviceEventService = MEDeviceEventService.create(\n      meDeviceEventServiceApiBaseUrl, MEV3ApiRequest.create(), this.meWebPushDb\n    )\n    await this.meWebPushDb.setMeDeviceEventServiceApiBaseUrl(meDeviceEventServiceApiBaseUrl)\n  }\n\n  private async checkApplicationCode (meClientService: MEClientService, applicationCode?: string): Promise<string> {\n    const appCode = await this.meWebPushDb.getAppCode()\n\n    if (!applicationCode) {\n      return Promise.reject(new Error('Can\\'t find application code!'))\n    }\n\n    const noSavedAppCode = !appCode\n    const appCodeChanged = appCode && appCode !== applicationCode\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (noSavedAppCode || appCodeChanged) {\n      await this.cleanupClientOnBackend(meClientService)\n      await this.meWebPushDb.clearAll()\n      await this.meWebPushDb.setAppCode(applicationCode)\n    }\n\n    return applicationCode\n  }\n\n  private async checkClientId (appCode: string): Promise<void> {\n    const clientId = await this.meWebPushDb.getClientIdForAppCode(appCode)\n\n    if (!clientId) {\n      Logger.log('No ClientId stored. Creating one...')\n      const id = appCode + '_' + uuidv4()\n      await this.meWebPushDb.setClientIdForAppCode(id, appCode)\n    } else {\n      Logger.log('ClientId exists:', clientId)\n    }\n  }\n\n  private async persistPlatformInfo (params: IInitParams): Promise<void> {\n    const completeNavigatorInfo = this.navigatorInfo.getAll()\n    await Promise.all([\n      this.meWebPushDb.setPlatform(completeNavigatorInfo.browser),\n      this.meWebPushDb.setApplicationVersion(params.applicationVersion ?? CONSTANTS.defaultApplicationVersion),\n      this.meWebPushDb.setDeviceModel(completeNavigatorInfo.userAgent),\n      this.meWebPushDb.setOsVersion(completeNavigatorInfo.browserVersion),\n      this.meWebPushDb.setLanguage(completeNavigatorInfo.language),\n      this.meWebPushDb.setTimezone(completeNavigatorInfo.timezone),\n      this.meWebPushDb.setSdkVersion(__VERSION__)\n    ])\n  }\n\n  private async persistConfig (params: IInitParams): Promise<void> {\n    const serviceWorkerUrl = params.serviceWorker ? params.serviceWorker.url : undefined\n    const serviceWorkerScope = Utils.determineServiceWorkerScope(params.serviceWorker)\n    const serviceWorkerAppPublicKey = params.serviceWorker ? params.serviceWorker.applicationServerPublicKey : undefined\n    await Promise.all([\n      this.meWebPushDb.setServiceWorkerUrl(serviceWorkerUrl),\n      this.meWebPushDb.setServiceWorkerScope(serviceWorkerScope),\n      this.meWebPushDb.setApplicationServerPublicKey(serviceWorkerAppPublicKey),\n      this.meWebPushDb.setDefaultNotificationIcon(params.defaultNotificationIcon),\n      this.meWebPushDb.setDefaultNotificationTitle(params.defaultNotificationTitle),\n      this.meWebPushDb.setWebsitePushId(params.safariWebsitePushID),\n      this.meWebPushDb.setPushPackageServiceUrl(params.safariPushPackageServiceUrl),\n      this.meWebPushDb.setLoggingEnabled(Boolean(params.enableLogging).valueOf()),\n      this.meWebPushDb.setMeClientServiceApiBaseUrl(\n        params.clientServiceApiBaseUrl ?? CONSTANTS.defaultClientServiceApiBaseUrl\n      ),\n      this.meWebPushDb.setMeDeviceEventServiceApiBaseUrl(\n        params.deviceEventServiceApiBaseUrl ?? CONSTANTS.defaultDeviceEventServiceApiBaseUrl\n      ),\n      this.meWebPushDb.setLastUsedAt()\n    ])\n  }\n\n  private async initPushNotifications (params: IInitParams): Promise<void> {\n    const enableMacSafariVapid: boolean = Boolean(params.enableMacSafariVapid).valueOf()\n    const initParamsToPersist = {\n      ...params,\n      enableLogging: Boolean(params.enableLogging).valueOf(),\n      enableMacSafariVapid\n    }\n    await this.meWebPushDb.setInitParams(initParamsToPersist)\n\n    await this.setupPushService(enableMacSafariVapid)\n\n    try {\n      await this.initialPushServiceProcessing(initParamsToPersist)\n    } catch (err) {\n      Logger.error(err, 'Internal error')\n    }\n  }\n\n  private async setupPushService (enableMacSafariVapid: boolean): Promise<void> {\n    if (!this.meClientService) {\n      throw new Error('Me client service connection is not set up!')\n    }\n    if (this.pushNotificationSupportInfo.canUseSafariPush() &&\n      (!enableMacSafariVapid || !this.pushNotificationSupportInfo.canUseServiceWorkers())) {\n      const config = await this.buildApnsApiRegistrationConfig()\n      this.pushService = new SafariPushService(this.meWebPushDb, config, this.meClientService)\n      return\n    }\n\n    if (this.pushNotificationSupportInfo.canUseServiceWorkers()) {\n      const vapidPushService: VapidPushService = new VapidPushService(this.meWebPushDb, this.meClientService)\n      await vapidPushService.updateServiceWorker()\n      this.pushService = vapidPushService\n    }\n  }\n\n  private async initialPushServiceProcessing (initParams: IInitParams) {\n    const pushService = this.getPushService()\n    const permission = pushService.getPermission()\n\n    if (permission === CONSTANTS.PERMISSION_GRANTED) {\n      await this.meWebPushDb.setLastPermissionStatus(permission)\n    }\n\n    const isResubscribeNeeded = await pushService.isResubscribeNeeded()\n\n    if (isResubscribeNeeded) {\n      Logger.log('Re-subscribe is needed.')\n      await this.unsubscribe()\n    }\n\n    const isRegistered = await this.isFullyRegistered(false)\n\n    switch (permission) {\n      case CONSTANTS.PERMISSION_PROMPT:\n        // device can't be registered if permission is \"default\" (so \"prompt\")\n        if (isRegistered) {\n          Logger.debug('Unsubscribing in PROMPT state')\n          this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_PROMPT)\n          await this.unsubscribe()\n        }\n\n        break\n\n      case CONSTANTS.PERMISSION_DENIED:\n        if (isRegistered) {\n          await this.unsubscribe()\n        }\n        this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_DENIED)\n        break\n\n      case CONSTANTS.PERMISSION_GRANTED:\n        if (!MeWebPush.isUnregistered()) {\n          await this.subscribe()\n        }\n        this.eventEmitter.emit(CONSTANTS.EVENT_ON_PERMISSION_GRANTED)\n        break\n    }\n  }\n\n  private async cleanupClientOnBackend (meClientService: MEClientService): Promise<void> {\n    Logger.debug('Cleanup of client information on backend side')\n    const { exists, pushTokenExists, identified } = await Utils.checkDevice(this.meWebPushDb)\n\n    if (!exists) {\n      Logger.debug('The browser is not registered at all.')\n      return\n    }\n\n    if (pushTokenExists) {\n      const result = await meClientService.removePushToken()\n      Logger.log('Removed registered push token:', result)\n    }\n\n    if (identified) {\n      const result = await meClientService.linkClientToContact()\n      Logger.log('Assigned anonymous contact:', result)\n    }\n  }\n\n  private getPushService (): IPushService {\n    if (this.pushService) {\n      return this.pushService\n    } else {\n      throw new Error('Push service is not set up!')\n    }\n  }\n\n  private async buildApnsApiRegistrationConfig (): Promise<ApnsApiRegistrationConfig> {\n    const safariWebsitePushID = await this.meWebPushDb.getWebsitePushId()\n    const applicationCode = await this.meWebPushDb.getAppCode()\n    const clientId = await this.meWebPushDb.getClientIdForAppCode(applicationCode)\n    if (safariWebsitePushID && applicationCode && clientId) {\n      const safariPushPackageServiceUrl = await this.meWebPushDb.getPushPackageServiceUrl()\n      return {\n        clientId,\n        applicationCode,\n        safariWebsitePushID,\n        safariPushPackageServiceUrl: safariPushPackageServiceUrl ?? CONSTANTS.defaultSafariPushPackageServiceUrl\n      }\n    } else {\n      throw new Error('safariWebsitePushID must be specified for Safari support!')\n    }\n  }\n\n  private onReadyHandler (cmd: HandlerFn) {\n    if (this.ready) {\n      cmd(undefined) // TODO: Pass the API (me client service & DES)\n    } else {\n      this.eventEmitter.on(CONSTANTS.EVENT_ON_READY, (params) => cmd(undefined, params))\n    }\n  }\n\n  private registerOrHandleOnReadyCallback (callback: SdkOnReadyCallback) {\n    this.onReadyHandler(callback)\n  }\n\n  private registerEventCallback (name: MeWebSdkEvent, callback: HandlerFn) {\n    this.eventEmitter.on(name, (params: any) => {\n      return callback(undefined, params) // TODO: Pass API instead of undefined here\n    })\n  }\n\n  private registerChangePermissionCallback (name: MeWebSdkEvent, callback: HandlerFn) {\n    const currentPromise = this.permissionPromises[name]\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises, @typescript-eslint/strict-boolean-expressions\n    if (!currentPromise) {\n      return\n    }\n\n    const registerCallbackForFurtherEvents = this.registerEventCallback.bind(this)\n    currentPromise\n      .then(() => {\n        // after the first occurrence was handled register the callback in the \"normal\"\n        // way so that subsequent events are forwarded too.\n        registerCallbackForFurtherEvents(name, callback)\n        return callback(undefined) // TODO: Replace undefined with this.API...\n      })\n      .catch((err) => Logger.error(err, 'Error while handling permission change callback.'))\n  }\n\n  private async isFullyRegistered (useCache: boolean = true): Promise<boolean> {\n    const status: string | undefined = Cache.getRegistrationStatus()\n    Logger.debug('Local status is', status)\n\n    if (status === undefined || !useCache) {\n      return this.updateRegistrationStatus()\n    } else {\n      return Promise.resolve(status === CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED)\n    }\n  }\n\n  private static isUnregistered (): boolean {\n    const status = Cache.getRegistrationStatus()\n    return (status === CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n  }\n\n  private async updateRegistrationStatus (): Promise<boolean> {\n    Logger.debug('Checking device...')\n    const isRegistered = await this.pushService!.isRegistered()\n    Logger.debug('Device exists & has token', isRegistered)\n    const status = isRegistered\n      ? CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED\n      : CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED\n    Cache.setRegistrationStatus(status)\n    return status === CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED\n  }\n\n  private async retrySendAfterContactTokenRefresh (eventsData: MEEventsRequestData): Promise<PostEventsResult> {\n    const success = await this.meClientService!.generateAccessToken()\n    if (!success) {\n      Logger.error('Refresh of access token failed!')\n      return { success: false }\n    }\n    return this.meDeviceEventService!.postEvents(eventsData)\n  }\n\n  public static create (window: Window, navigator: Navigator): MeWebPush {\n    return new MeWebPush(window, navigator)\n  }\n}\n","import { NavigatorInfo } from './navigator-info'\n\nexport class PushNotificationSupportInfo {\n  private readonly navigatorInfo: NavigatorInfo\n  private readonly window: Window\n\n  constructor (navigatorInfo: NavigatorInfo, win: Window) {\n    this.navigatorInfo = navigatorInfo\n    this.window = win\n  }\n\n  pushNotificationsSupported (): boolean {\n    return this.canUseSafariPush() || this.canUseServiceWorkers()\n  }\n\n  canUseServiceWorkers (): boolean {\n    return (\n      this.navigatorInfo.hasServiceWorker() &&\n      ('PushManager' in this.window)\n    )\n  }\n\n  canUseSafariPush (): boolean {\n    return 'safari' in this.window && 'pushNotification' in this.window.safari\n  }\n\n  canUsePromises (): boolean {\n    return 'Promise' in this.window\n  }\n\n  static create (navigatorInfo: NavigatorInfo, win: Window): PushNotificationSupportInfo {\n    return new PushNotificationSupportInfo(navigatorInfo, win)\n  }\n}\n","import { BrowserVersionParser } from './browser-version-parser'\n\nexport type BrowserName =\n  | 'edge'\n  | 'samsung'\n  | 'chrome'\n  | 'firefox'\n  | 'safari'\n  | 'opera'\n\ntype UserAgentRule = [BrowserName, RegExp]\n\nconst browserRules: UserAgentRule[] = [\n  ['edge', /Edge\\/([0-9._]+)/],\n  ['edge', /EdgiOS\\/([0-9._]+)/],\n  ['edge', /EdgA?\\/([0-9.]+)/],\n  ['samsung', /SamsungBrowser\\/([0-9.]+)/],\n  ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9.]+)(:?\\s|$)/],\n  ['firefox', /Firefox\\/([0-9.]+)(?:\\s|$)/],\n  ['opera', /Opera Mini.*Version\\/([0-9.]+)/],\n  ['opera', /Opera\\/([0-9.]+)(?:\\s|$)/],\n  ['opera', /OPR\\/([0-9.]+)(:?\\s|$)/],\n  ['safari', /Version\\/([0-9._]+).*Safari/]\n]\n\nconst browserNameMapping: { [key: string]: BrowserName} = {\n  samsung: 'chrome',\n  opera: 'chrome'\n}\n\nexport type GetAllResult = {\n  userAgent: string\n  browser: string\n  browserVersion: string\n  timezone: string\n  language: string\n}\n\nexport class NavigatorInfo {\n  private navigator: Navigator\n\n  constructor (navig: Navigator) {\n    this.navigator = navig\n  }\n\n  /**\n   * Get environment info like browserVersion language etc.\n   */\n  getAll (): GetAllResult {\n    return {\n      userAgent: this.getUserAgent(),\n      browser: this.getBrowserName(),\n      browserVersion: this.getVersion(),\n      timezone: this.getTimezone(),\n      language: this.getLanguage()\n    }\n  }\n\n  hasServiceWorker (): boolean {\n    return ('serviceWorker' in this.navigator)\n  }\n\n  private getUserAgent (): string {\n    return this.navigator.userAgent\n  }\n\n  private getBrowserName (): string {\n    let browserName: BrowserName = 'chrome'\n    const nAgt = this.navigator.userAgent\n    for (const rule of browserRules) {\n      const [name, regex] = rule\n      const match = regex.exec(nAgt)\n      if (match) {\n        browserName = name\n        break\n      }\n    }\n    return this.getMappedBrowserName(browserName)\n  }\n\n  private getMappedBrowserName (name: BrowserName): BrowserName {\n    const mapped = browserNameMapping[name]\n    if (mapped) {\n      return mapped\n    } else {\n      return name\n    }\n  }\n\n  private getVersion (): string {\n    return BrowserVersionParser.parseBrowserVersion(this.navigator)\n  }\n\n  private getTimezone (): string {\n    const offset = new Date().getTimezoneOffset()\n    const timezone = ((offset < 0 ? '+' : '-') +\n      this.pad(Math.abs(offset / 60), 2) +\n      this.pad(Math.abs(offset % 60), 2))\n    return timezone\n  }\n\n  private getLanguage () {\n    return this.navigator.language\n  }\n\n  /**\n   * Convert number to string and pad the string with zeros to be the required length\n   */\n  private pad (nr: number, length: number): string {\n    let str = nr.toString()\n    while (str.length < length) {\n      str = '0' + str\n    }\n    return str\n  }\n\n  static create (navig: Navigator): NavigatorInfo {\n    return new NavigatorInfo(navig)\n  }\n}\n","// eslint-disable-next-line  @typescript-eslint/no-extraneous-class\nexport class BrowserVersionParser {\n  static parseBrowserVersion (_navigator: Navigator): string {\n    const verOffset = BrowserVersionParser.getVersionOffset(_navigator.userAgent)\n    if (verOffset === -1) {\n      return _navigator.appVersion\n    }\n    const version = _navigator.userAgent.substring(verOffset)\n    return BrowserVersionParser.trimVersion(version)\n  }\n\n  private static getVersionOffset (userAgent: string): number {\n    // The order of the supported agents is important!!!\n    const supportedAgents = ['SamsungBrowser', 'OPR', 'Edge', 'Edg', 'Chrome', 'Safari', 'Firefox']\n    for (let i = 0; i < supportedAgents.length; i++) {\n      const agent = supportedAgents[i]\n      const offset = BrowserVersionParser.checkOffset(agent, userAgent)\n      if (agent === 'Safari' && offset !== -1) {\n        const safariVersionOffset = BrowserVersionParser.checkOffset('Version', userAgent)\n        if (safariVersionOffset !== -1) {\n          return safariVersionOffset\n        }\n        return offset\n      }\n      if (offset !== -1) {\n        return offset\n      }\n    }\n    return -1\n  }\n\n  private static checkOffset (name: string, userAgent: string): number {\n    const offset = userAgent.indexOf(name)\n    return offset >= 0 ? offset + name.length + 1 : -1\n  }\n\n  private static trimVersion (version: string): string {\n    const regex = /^(([0-9]|\\.)*)[ );]/\n    if (!regex.test(version)) {\n      return version\n    }\n    return regex.exec(version)![1]\n  }\n}\n","export { VapidPushService } from './vapid-push-service'\nexport { SafariPushService } from './safari-push-service'\n","import { v4 as uuidv4 } from 'uuid'\n\nimport * as CONSTANTS from '../constants'\nimport logging from '../logging'\nimport { IPushService } from './push-service.types'\nimport { MEWebPushDb } from '../me-web-push-db'\nimport { MEClientService } from '../me-client-service'\nimport * as Cache from '../local-storage'\nimport * as Utils from '../utils'\n\nexport class VapidPushService implements IPushService {\n  private registration?: ServiceWorkerRegistration\n  private readonly webPushDb: MEWebPushDb\n  private readonly meClientService: MEClientService\n\n  constructor (\n    webPushDb: MEWebPushDb,\n    meClientService: MEClientService\n  ) {\n    this.webPushDb = webPushDb\n    this.meClientService = meClientService\n  }\n\n  public getPermission (): NotificationPermission {\n    return Notification.permission\n  }\n\n  public isPermissionGranted (): boolean {\n    return this.getPermission() === CONSTANTS.PERMISSION_GRANTED\n  }\n\n  public isPermissionDefault (): boolean {\n    return this.getPermission() === CONSTANTS.PERMISSION_PROMPT\n  }\n\n  public async askPermission (): Promise<NotificationPermission> {\n    return Notification.requestPermission()\n  }\n\n  public async getPushToken (): Promise<WebPushToken | undefined> {\n    return this.webPushDb.getPushToken()\n  }\n\n  public async subscribe (contactInfo?: {} | ContactInfo): Promise<void> {\n    const isPermissionGranted = this.isPermissionGranted()\n\n    if (!isPermissionGranted) {\n      logging.Logger.error('Permission must be granted before subscription!')\n      return\n    }\n\n    // get browser subscription\n    const subscription = await this.getPushSubscription()\n    if (subscription !== null) {\n      const pushToken = JSON.stringify(subscription)\n      logging.Logger.debug('Got valid subscription:', pushToken)\n\n      const storedPushToken = await this.getPushToken()\n      if (storedPushToken !== pushToken) {\n        logging.Logger.debug('Registering device, linking and registering push token')\n        if (\n          await this.meClientService.storeClientDetails() &&\n          await this.meClientService.linkClientToContact(Utils.toContactInfo(contactInfo)) &&\n          await this.meClientService.registerPushToken(pushToken)\n        ) {\n          // persist in local DB after all actions were successful\n          await this.webPushDb.setPushToken(pushToken)\n          Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED)\n        }\n      }\n    } else {\n      logging.Logger.warn('Issue fetching the actual push token (subscription).')\n    }\n  }\n\n  public async unsubscribe (): Promise<void> {\n    logging.Logger.log('VAPID: unsubscribe')\n    // get service worker registration\n    const registration = await this.getServiceWorkerRegistration()\n\n    logging.Logger.log('VAPID: registration', registration)\n    // get current subscription\n    const subscription = await registration.pushManager.getSubscription()\n    logging.Logger.log('VAPID: subscription', subscription)\n\n    // remove token\n    await this.meClientService.removePushToken()\n    await this.webPushDb.setPushToken(undefined)\n\n    if (!subscription) {\n      return\n    }\n\n    await subscription.unsubscribe()\n    Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n    // TODO: await this.unregisterDevice()\n  }\n\n  public async isRegistered (): Promise<boolean> {\n    return Utils.isDeviceRegistered(this.webPushDb)\n  }\n\n  public async isResubscribeNeeded (): Promise<boolean> {\n    // check change permission status\n    const lastPermission = await this.webPushDb.getLastPermissionStatus()\n    const permission = this.getPermission()\n\n    if (lastPermission !== permission) {\n      await this.webPushDb.setLastPermissionStatus(permission)\n    }\n    return (lastPermission !== permission)\n  }\n\n  public async updateServiceWorker (): Promise<ServiceWorkerRegistration> {\n    return this.registerServiceWorker()\n  }\n\n  private async getServiceWorkerRegistration (): Promise<ServiceWorkerRegistration> {\n    if (!this.registration) {\n      logging.Logger.debug('No service worker found. Registering service worker...')\n      this.registration = await this.registerServiceWorker()\n\n      // eslint-disable-next-line  @typescript-eslint/strict-boolean-expressions\n      if (!this.registration) {\n        throw new Error('Internal Error: Can\\'t register service worker!')\n      } else {\n        logging.Logger.log('Service worker is registered')\n        await this.registration.update()\n      }\n    }\n\n    return this.registration\n  }\n\n  private async registerServiceWorker (): Promise<ServiceWorkerRegistration> {\n    const url = await this.webPushDb.getServiceWorkerUrl()\n    const scope = await this.webPushDb.getServiceWorkerScope()\n    const sdkVersion = await this.webPushDb.getSdkVersion()\n    const serviceWorkerVersion = await this.webPushDb.getServiceWorkerVersion()\n\n    // add clean cache get parameter if sdk version and service worker\n    // version is not the same to trigger an update of the service worker\n    const cleanCache = (sdkVersion !== serviceWorkerVersion) ? `?cache_clean=${uuidv4()}` : ''\n    const options = scope ? { scope } : undefined\n\n    return navigator\n      .serviceWorker\n      .register(`/${url!}${cleanCache}`, options)\n  }\n\n  private async getPushSubscription (isRetry: boolean = false): Promise<PushSubscription | null> {\n    const registration = await this.getServiceWorkerRegistration()\n    const applicationServerKey = await this.getApplicationServerKey()\n\n    const existingSubscription = await registration.pushManager.getSubscription()\n    const subscription = existingSubscription !== null\n      ? existingSubscription\n      : await registration.pushManager.subscribe({ userVisibleOnly: true, applicationServerKey })\n\n    if (subscription.endpoint.length > 0) {\n      return subscription\n    } else {\n      if (isRetry) {\n        logging.Logger.warn('Retry to get subscription without empty endpoint failed. Giving up.')\n        return null\n      } else {\n        return this.handleSubscriptionWithEmptyEndpoint(subscription)\n      }\n    }\n  }\n\n  private async handleSubscriptionWithEmptyEndpoint (subscription: PushSubscription): Promise<PushSubscription | null> {\n    logging.Logger.warn('Got subscription with empty endpoint', subscription)\n    const success = await subscription.unsubscribe()\n\n    if (!success) {\n      logging.Logger.warn('Unable to unsubscribe from subscription with empty endpoint')\n      return null\n    }\n\n    logging.Logger.debug('Retrying to get a subscription without an empty endpoint')\n    return this.getPushSubscription(true)\n  }\n\n  private async getApplicationServerKey (): Promise<string | undefined> {\n    return this.webPushDb.getApplicationServerPublicKey()\n  }\n}\n","\nimport * as CONSTANTS from '../constants'\n\nimport logging from '../logging'\nimport { IPushService } from './push-service.types'\nimport { MEWebPushDb } from '../me-web-push-db'\nimport { MEClientService } from '../me-client-service'\nimport * as Cache from '../local-storage'\nimport * as Utils from '../utils'\n\nexport class SafariPushService implements IPushService {\n  private readonly webPushDb: MEWebPushDb\n  private readonly config: ApnsApiRegistrationConfig\n  private readonly meClientService: MEClientService\n\n  constructor (\n    webPushDb: MEWebPushDb,\n    config: ApnsApiRegistrationConfig,\n    meClientService: MEClientService\n  ) {\n    this.webPushDb = webPushDb\n    this.config = config\n    this.meClientService = meClientService\n  }\n\n  public getPermission (): NotificationPermission {\n    const { permission } = this.getPermissionInfo()\n    return permission\n  }\n\n  public isPermissionGranted (): boolean {\n    return this.getPermission() === CONSTANTS.PERMISSION_GRANTED\n  }\n\n  public isPermissionDefault (): boolean {\n    return this.getPermission() === CONSTANTS.PERMISSION_PROMPT\n  }\n\n  public async askPermission (): Promise<NotificationPermission> {\n    const application = this.config.applicationCode\n    const clientId = this.config.clientId\n    const payload = { application, clientId }\n\n    return new Promise(resolve => {\n      safari.pushNotification.requestPermission(\n        this.config.safariPushPackageServiceUrl,\n        this.config.safariWebsitePushID,\n        payload,\n        (obj: TSafariPermissionObject) => resolve(obj.permission)\n      )\n    })\n  }\n\n  public async getPushToken (): Promise<WebPushToken | undefined> {\n    return this.webPushDb.getPushToken()\n  }\n\n  public async subscribe (contactInfo?: {} | ContactInfo): Promise<void> {\n    const isPermissionGranted = this.isPermissionGranted()\n    if (!isPermissionGranted) {\n      logging.Logger.error('Permission must be granted before subscribing!')\n      return\n    }\n\n    const { deviceToken } = this.getPermissionInfo()\n    if (deviceToken) {\n      logging.Logger.debug('Got device token:', deviceToken)\n\n      const storedPushToken = await this.getPushToken()\n\n      if (storedPushToken !== deviceToken) {\n        logging.Logger.debug('Registering device, linking and registering push token')\n        if (\n          await this.meClientService.storeClientDetails() &&\n          await this.meClientService.linkClientToContact(Utils.toContactInfo(contactInfo)) &&\n          await this.meClientService.registerPushToken(deviceToken)\n        ) {\n          // persist in local DB after all actions were successful\n          await this.webPushDb.setPushToken(deviceToken)\n          Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_REGISTERED)\n        }\n      }\n    } else {\n      await this.webPushDb.setPushToken(deviceToken)\n      Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n    }\n  }\n\n  public async unsubscribe (): Promise<void> {\n    // remove token\n    await this.meClientService.removePushToken()\n    await this.webPushDb.setPushToken(undefined)\n    Cache.setRegistrationStatus(CONSTANTS.DEVICE_REGISTRATION_STATUS_UNREGISTERED)\n  }\n\n  public async isRegistered (): Promise<boolean> {\n    return Utils.isDeviceRegistered(this.webPushDb)\n  }\n\n  public async isResubscribeNeeded (): Promise<boolean> {\n    const savedWebSitePushId = await this.webPushDb.getWebsitePushId()\n    const savedWebSitePushIdExists = typeof savedWebSitePushId !== 'undefined'\n    const webSitePushIdChanged = savedWebSitePushIdExists && this.config.safariWebsitePushID !== savedWebSitePushId\n\n    await this.webPushDb.setWebsitePushId(this.config.safariWebsitePushID)\n\n    // check change permission status\n    const lastPermission = await this.webPushDb.getLastPermissionStatus()\n    const permission = this.getPermission()\n\n    if (lastPermission !== permission) {\n      await this.webPushDb.setLastPermissionStatus(permission)\n      return true\n    }\n\n    return (webSitePushIdChanged || !savedWebSitePushIdExists)\n  }\n\n  private getPermissionInfo (): TSafariPermissionObject {\n    return safari.pushNotification.permission(this.config.safariWebsitePushID)\n  }\n}\n","/* eslint-disable @typescript-eslint/no-dynamic-delete, @typescript-eslint/prefer-optional-chain,  @typescript-eslint/strict-boolean-expressions */\n/* eslint-disable @typescript-eslint/no-floating-promises */\nclass EventEmitter {\n  private readonly _events: {[key: string]: ListenerFn[]}\n\n  constructor () {\n    this._events = {}\n  }\n\n  emit (evt: string, param?: any) {\n    const events = this._events[evt] && this._events[evt].slice()\n    if (events && events.length) {\n      for (let i = 0; i < events.length; i++) {\n        events[i](param)\n      }\n    }\n  }\n\n  on (evt: string, fn: ListenerFn) {\n    if (!this._events[evt]) {\n      this._events[evt] = []\n    }\n    this._events[evt].push(fn)\n    return this\n  }\n\n  once (evt: string, fn: ListenerFn) {\n    let used = false\n    const oncefun = (param: any) => {\n      if (!used) {\n        used = true\n        this.removeListener(evt, oncefun)\n        return fn(param)\n      }\n    }\n    return this.on(evt, oncefun)\n  }\n\n  removeListener (evt: string, listener: ListenerFn) {\n    const events = this._events[evt]\n    if (events) {\n      const idx = events.indexOf(listener)\n      if (idx > -1) {\n        events.splice(idx, 1)\n      }\n      if (events.length < 1) {\n        delete this._events[evt]\n      }\n    }\n  }\n\n  /**\n   * Get the total number of registered listeners (for testing)\n   */\n  totalListenerCount (): number {\n    let sum = 0\n    Object.keys(this._events).forEach(key => {\n      sum += this._events[key].length\n    })\n    return sum\n  }\n\n  /**\n   * Get number of listeners, registered for a specific event (for testing)\n   */\n  listenerCountFor (event: string): number {\n    const listeners = this._events[event]\n    return listeners ? listeners.length : 0\n  }\n}\n\nexport default EventEmitter\n"],"sourceRoot":""}